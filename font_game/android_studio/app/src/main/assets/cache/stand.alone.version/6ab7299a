var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var URI_1 = require("./URI");
var AppConfig = /** @class */ (function (_super) {
    __extends(AppConfig, _super);
    function AppConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AppConfig.getInitLoadingUrls = function () {
        if (AppConfig.platform == "wx") {
            return [
                "res/atlas/map.atlas",
                "res/data.json",
                // URI.spineUrl + "other_taozhuangxitong1.sk",
                URI_1.default.spineUrl + "other_taozhuangxitong1.png",
                // URI.spineUrl + "other_wupinghuanrao_kin_little.sk",
                URI_1.default.spineUrl + "other_wupinghuanrao_kin_little.png",
                "res/atlas/test.atlas"
            ];
        }
        else {
            return [
                "res/data.json",
                URI_1.default.spineUrl + "other_taozhuangxitong1.sk",
                URI_1.default.spineUrl + "other_wupinghuanrao_kin_little.sk",
            ];
        }
    };
    AppConfig.getAsynUrls = function () {
        return [
            // "sound/bg_music.wav",
            "sound/hecheng.wav",
            "sound/teji.wav",
            "sound/xiahua.wav",
            "sound/xiaochu.wav",
            "sound/yidong.wav"
        ];
    };
    AppConfig.getMobileHeight = function () {
        if (AppConfig.platform != "wx") {
            return 1136;
        }
        var wxInfo = wx.getSystemInfoSync();
        console.log('wx height:', wxInfo.windowHeight, ', widht:', wxInfo.windowWidth);
        var h = 640 * wxInfo.windowHeight / wxInfo.windowWidth;
        console.log('h:', h);
        if (h > 1136) {
            return h;
        }
        return 1136;
    };
    //是否已经新手引导过
    AppConfig.hadGuidance = function () {
        var bo = localStorage.getItem("guide_1");
        if (bo == "true") {
            return true;
        }
        return false;
    };
    AppConfig.setGuidance = function (value) {
        if (value) {
            localStorage.setItem("guide_1", "true");
        }
        else {
            localStorage.setItem("guide_1", "false");
        }
    };
    Object.defineProperty(AppConfig, "isNative", {
        get: function () {
            return this.platform != "wx";
        },
        enumerable: true,
        configurable: true
    });
    AppConfig.asynUrlsLoaded = false;
    AppConfig.pools = {};
    // public static platform = "test"; //laya测试
    // public static platform = "wx"; //微信测试
    AppConfig.platform = "android"; //android native
    // public static platform = "android4399"; //android native4399
    // public static platform = "ios"; //ios native
    AppConfig.version = "3.1";
    return AppConfig;
}(Laya.Script));
exports.default = AppConfig;

},{"./URI":6}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
* 源代码拓展
*/
var CodeExpand = /** @class */ (function () {
    function CodeExpand() {
    }
    CodeExpand.init = function () {
        // Laya.Sprite拓展
        var spriteProto = Laya.Sprite.prototype;
        // 添加点击缩放的监听
        spriteProto["zoomOn"] = function (handler, scale) {
            if (scale === void 0) { scale = 1.1; }
            var self = this;
            if (!self["initSX"]) {
                self["initSX"] = self.scaleX;
                self["initSY"] = self.scaleY;
            }
            if (scale > 0 && scale != 1) {
                var centerX = self.getCenterX();
                var centerY = self.getCenterY();
                self.pivotX = self.width / 2;
                self.pivotY = self.height / 2;
                self.pos(centerX, centerY);
            }
            if (self.hasListener("press")) {
                self.off(Laya.Event.MOUSE_DOWN, self, self["mouseDown"]);
                self.off(Laya.Event.MOUSE_UP, self, self["mouseUp"]);
                self.off(Laya.Event.MOUSE_MOVE, self, self["mouseMove"]);
                self.off(Laya.Event.MOUSE_OUT, self, self["mouseOut"]);
                self.off(Laya.Event.MOUSE_OVER, self, self["mouseOver"]);
                self.off("press", self, self["press"]);
            }
            self["mouseDown"] = function (event) {
                if (self["isDown"])
                    return;
                self.scale(self["initSX"] * scale, self["initSY"] * scale);
                self["isDown"] = true;
                handler && handler.runWith(event);
                setTimeout(function () {
                    if (self["isDown"]) {
                        self.event("press");
                    }
                }, 200);
                // if (game.AppConfig.soundEffect)
                // {
                // 	Laya.SoundManager.playSound(game.URI.audioUrl + "UI/button.wav", 1);
                // }
            };
            self["mouseUp"] = function (event) {
                if (!self["isDown"])
                    return;
                self.scale(self["initSX"], self["initSY"]);
                handler && handler.runWith(event);
                self["isDown"] = false;
            };
            self["mouseMove"] = function (event) {
                if (self["isDown"]) {
                    handler && handler.runWith(event);
                }
            };
            self["mouseOver"] = function (event) {
                handler && handler.runWith(event);
            };
            self["mouseOut"] = function (event) {
                if (self["isDown"]) {
                    self.scale(self["initSX"], self["initSY"]);
                    handler && handler.runWith(event);
                }
                self["isDown"] = false;
            };
            self["press"] = function (event) {
                var event = new Laya.Event();
                event.type = "press";
                event.currentTarget = self;
                handler && handler.runWith(event);
            };
            self.on("press", this, self["press"]);
            self.on(Laya.Event.MOUSE_DOWN, this, self["mouseDown"]);
            self.on(Laya.Event.MOUSE_UP, this, self["mouseUp"]);
            self.on(Laya.Event.MOUSE_MOVE, this, self["mouseMove"]);
            self.on(Laya.Event.MOUSE_OVER, this, self["mouseOver"]);
            self.on(Laya.Event.MOUSE_OUT, this, self["mouseOut"]);
            // if (self["top"])
            // {
            // 	self.y = self["top"] + self.pivotY;
            // 	self["top"] = NaN;
            // }
            // if (self["bottom"])
            // {
            // 	self.y = (self.parent as Laya.Sprite).height - self["bottom"] - self.height + self.pivotY;
            // 	self["bottom"] = NaN;
            // }
            // if (self["left"])
            // {
            // 	self.x = self["left"] + self.pivotX;
            // 	self["left"] = NaN;
            // }
            // if (self["right"])
            // {
            // 	self.x = (self.parent as Laya.Sprite).width - self["right"] - self.width + self.pivotX;
            // 	self["right"] = NaN;
            // }
        };
        spriteProto["getLeft"] = function () {
            var self = this;
            if (self["anchorX"]) {
                self.pivotX = self.width * self["anchorX"];
            }
            return self.x - self.pivotX * self.scaleX;
        };
        spriteProto["getRight"] = function () {
            var self = this;
            return self.getLeft() + self.width * self.scaleX;
        };
        spriteProto["getTop"] = function () {
            var self = this;
            if (self["anchorY"]) {
                self.pivotY = self.height * self["anchorY"];
            }
            return self.y - self.pivotY * self.scaleY;
        };
        spriteProto["getBottom"] = function () {
            var self = this;
            return self.getTop() + self.height * self.scaleY;
        };
        spriteProto["getCenterX"] = function () {
            var self = this;
            return self.getLeft() + self.width / 2 * self.scaleX;
        };
        spriteProto["getCenterY"] = function () {
            var self = this;
            return self.getTop() + self.height / 2 * self.scaleY;
        };
        spriteProto["clone"] = function () {
            if (!this["uiData"])
                return null;
            var self = this;
            var clone = Laya.SceneUtils.createComp(self["uiData"]);
            // if (self["uiData"])
            // {
            // 	for (var key in self["uiData"]["props"]) {
            // 		if (self["uiData"]["props"].hasOwnProperty(key)) {
            // 			var element = self[key];
            // 			clone["key"] = element;
            // 		}
            // 	}
            // 	self.children([]).forEach(child => {
            // 		var index = self.getChildIndex(child)
            // 		clone.removeChildAt(index);
            // 		clone.addChildAt((child as Laya.Sprite).clone(), index);
            // 	});
            // }
            clone.visible = self.visible;
            return clone;
        };
        // String拓展
        var stringProto = String.prototype;
        // 字符串格式化(只做了简单的%d,%s匹配，未做参数个数和类型判断，之后优化完善)
        String["format"] = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var str = args[0];
            args = args.slice(1, args.length);
            var match = function (mString, mArgs) {
                var index = 0;
                var result = mString.match(new RegExp("%[d,s]+"));
                if (!result) {
                    return mString;
                }
                else {
                    mString = mString.replace(result[0], mArgs[0]);
                    mArgs = mArgs.slice(1, mArgs.length);
                    return match(mString, mArgs);
                }
            };
            return match(str, args);
        };
        String["isEmojiCharacter"] = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var substring = args[0];
            for (var i = 0; i < substring.length; i++) {
                var hs = substring.charCodeAt(i);
                if (0xd800 <= hs && hs <= 0xdbff) {
                    if (substring.length > 1) {
                        var ls = substring.charCodeAt(i + 1);
                        var uc = ((hs - 0xd800) * 0x400) + (ls - 0xdc00) + 0x10000;
                        if (0x1d000 <= uc && uc <= 0x1f77f) {
                            return true;
                        }
                    }
                }
                else if (substring.length > 1) {
                    var ls = substring.charCodeAt(i + 1);
                    if (ls == 0x20e3) {
                        return true;
                    }
                }
                else {
                    if (0x2100 <= hs && hs <= 0x27ff) {
                        return true;
                    }
                    else if (0x2B05 <= hs && hs <= 0x2b07) {
                        return true;
                    }
                    else if (0x2934 <= hs && hs <= 0x2935) {
                        return true;
                    }
                    else if (0x3297 <= hs && hs <= 0x3299) {
                        return true;
                    }
                    else if (hs == 0xa9 || hs == 0xae || hs == 0x303d || hs == 0x3030
                        || hs == 0x2b55 || hs == 0x2b1c || hs == 0x2b1b
                        || hs == 0x2b50) {
                        return true;
                    }
                }
            }
        };
        // Array拓展
        var arrayProto = Array.prototype;
        // array字段排序 1：arr.sortOn([["key1", "up"], ["key2", "down"]]) 2：arr.sortOn("up")
        // 复合排序 fieldList包含多个列表，每个列表包含2个值，第一个表示要排序的key,第二个表示要排序的类型（升降序
        // 值排序 只传一个字符串表示对值列表进行排序
        arrayProto["sortOn"] = function (fieldList) {
            var index = 0;
            var compare = function (a, b) {
                var result = 0;
                var key = fieldList[index][0];
                var sortType = fieldList[index][1] || "up";
                var valueA = a[key];
                var valueB = b[key];
                if (typeof (valueA) == "boolean") {
                    valueA = valueA ? 1 : 0;
                    valueB = valueB ? 1 : 0;
                }
                if (valueA > valueB) {
                    result = sortType == "up" ? 1 : -1;
                }
                else if (valueA < valueB) {
                    result = sortType == "up" ? -1 : 1;
                }
                else {
                    index++;
                    if (fieldList[index]) {
                        return compare(a, b);
                    }
                    else {
                        result = 1;
                    }
                }
                index = 0;
                return result;
            };
            if (typeof (fieldList) == "string") {
                this.sort(function (a, b) {
                    var result = 0;
                    if (a > b) {
                        result = fieldList == "up" ? 1 : -1;
                    }
                    else if (a < b) {
                        result = fieldList == "up" ? -1 : 1;
                    }
                    return result;
                });
            }
            else {
                this.sort(compare);
            }
        };
        arrayProto["getIndex"] = function (value) {
            var i = -1;
            for (i = 0; i < this.length; i++) {
                if (this[i] == value) {
                    return i;
                }
            }
            return i;
        };
        if (!Int32Array["prototype"]["fill"]) {
            Int32Array["prototype"]["fill"] = function (value) {
                var i = 0;
                while (typeof this[i] != "undefined") {
                    this[i] = value;
                    i++;
                }
                return this;
            };
        }
        if (!Number["isFinite"]) {
            Number["isFinite"] = function (value) {
                return (typeof value == "number") && (value != NaN);
            };
        }
    };
    return CodeExpand;
}());
exports.default = CodeExpand;

},{}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var LoadingScene_1 = require("./script/scene/LoadingScene");
var MainGameScene_1 = require("./script/scene/MainGameScene");
var FontGrid_1 = require("./script/prefeb/FontGrid");
var GameUI_1 = require("./script/GameUI");
var GameControl_1 = require("./script/GameControl");
var Bullet_1 = require("./script/Bullet");
var DropBox_1 = require("./script/DropBox");
var GameResult_1 = require("./script/prefeb/GameResult");
var GameSetting_1 = require("./script/prefeb/GameSetting");
var StartGame_1 = require("./script/prefeb/StartGame");
var TipItem_1 = require("./script/prefeb/TipItem");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("script/scene/LoadingScene.ts", LoadingScene_1.default);
        reg("script/scene/MainGameScene.ts", MainGameScene_1.default);
        reg("script/prefeb/FontGrid.ts", FontGrid_1.default);
        reg("script/GameUI.ts", GameUI_1.default);
        reg("script/GameControl.ts", GameControl_1.default);
        reg("script/Bullet.ts", Bullet_1.default);
        reg("script/DropBox.ts", DropBox_1.default);
        reg("script/prefeb/GameResult.ts", GameResult_1.default);
        reg("script/prefeb/GameSetting.ts", GameSetting_1.default);
        reg("script/prefeb/StartGame.ts", StartGame_1.default);
        reg("script/prefeb/TipItem.ts", TipItem_1.default);
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "showall";
    GameConfig.screenMode = "vertical";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "loading/Loading.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();

},{"./script/Bullet":7,"./script/DropBox":8,"./script/GameControl":9,"./script/GameUI":10,"./script/prefeb/FontGrid":19,"./script/prefeb/GameResult":20,"./script/prefeb/GameSetting":21,"./script/prefeb/StartGame":23,"./script/prefeb/TipItem":24,"./script/scene/LoadingScene":25,"./script/scene/MainGameScene":26}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var AppConfig_1 = require("./AppConfig");
var MapFontInfo_1 = require("./script/model/MapFontInfo");
var CodeExpand_1 = require("./CodeExpand");
var ResMgr_1 = require("./ResMgr");
var TipController_1 = require("./script/controller/TipController");
var ControllerMgr_1 = require("./script/controller/ControllerMgr");
var SceneMgr_1 = require("./script/scene/SceneMgr");
var LoadingScene_1 = require("./script/scene/LoadingScene");
var SoundTool_1 = require("./script/tool/SoundTool");
var Main = /** @class */ (function () {
    function Main() {
        //根据IDE设置初始化引擎		
        // let str = "";
        // let arr = str.split(",");
        // let coutArr = [];
        // let cout = "";
        // arr.forEach(element => {
        // 	let elementStr = element.trim();
        // 	if(elementStr == "")
        // 	{
        // 		return;
        // 	}
        // 	if(coutArr.indexOf(elementStr) != -1)
        // 	{
        // 		return;
        // 	}
        // 	if(cout != "")
        // 	{
        // 		cout += ","
        // 	}
        // 	coutArr.push(elementStr);
        // 	cout += "\"" +elementStr + "\"";
        // })
        // Laya.init(GameConfig.width, 1386,"webgl");
        // Laya.init(GameConfig.width, GameConfig.height,"webgl");
        var h = AppConfig_1.default.getMobileHeight();
        Laya.init(GameConfig_1.default.width, h, "webgl");
        // Laya.init(640, 1136);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        // if(AppConfig.platform == "wx")
        // {
        // 	// Laya.URL.basePath = "https://raw.githubusercontent.com/wupei1987/font-game-wx-asset/master/";
        // 	wx.setEnableDebug({
        // 		enableDebug: true,
        // 		success: (result: _setEnableDebugSuccessObject) => void{},
        // 		fail: () => void{},
        // 		complete: () => void{},
        // 	  })
        // }
        if (AppConfig_1.default.platform == "wx") {
            Laya.stage.scaleMode = "fixheight";
            Laya.URL.basePath = "https://raw.githubusercontent.com/wupei1987/font-game-wx-asset/master/";
            Laya.MiniAdpter.nativefiles = [
                "btn_startGame.png",
                "fileconfig.json",
                "version.json",
                "loading/Loading.json",
                "res/atlas/loading.atlas",
                "res/atlas/loading.png",
                "main/MainGame.json",
                "res/atlas/map.atlas",
                "res/atlas/map.png",
                "test/TestScene.json",
                "res/atlas/test.atlas",
                "res/data.json",
                "res/spine/other_taozhuangxitong1.sk",
                "res/spine/other_taozhuangxitong1.png",
                "res/spine/other_wupinghuanrao_kin_little.sk",
                "res/spine/other_wupinghuanrao_kin_little.png",
                "prefab/Bullet.json",
                "prefab/DropBox.json",
                "prefab/FontGrid.json",
                "prefab/GameResult.json",
                "prefab/GameSetting.json",
                "prefab/StartGame.json",
                "prefab/TipItem.json",
                "res/atlas/test.png"
            ];
            // wx["setPreferredFramesPerSecond"](30);
        }
        else {
            Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        }
        // Laya.stage.scaleMode = GameConfig.scaleMode;
        Laya.stage.alignV = GameConfig_1.default.alignV;
        Laya.stage.alignH = GameConfig_1.default.alignH;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        // Laya.stage.frameRate = "slow";
        // Laya.enableDebugPanel();
        // Laya.Browser.window.showAlertOnJsException(false);
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        CodeExpand_1.default.init();
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        Laya.Scene.open(GameConfig_1.default.startScene, true, null, Laya.Handler.create(this, this.onLoadingLoad));
    };
    /**
     * 更新进度条
     * @param percent 百分比 0-100
     */
    Main.prototype.updateLoadingProgress = function (percent) {
        percent = Math.floor(percent);
        if (SceneMgr_1.default.curSceneScript != null && SceneMgr_1.default.curSceneScript instanceof LoadingScene_1.default) {
            SceneMgr_1.default.curSceneScript.updatePercent(percent);
        }
    };
    Main.prototype.onLoadingLoad = function () {
        if (Laya.Browser.window.loadingView) {
            Laya.Browser.window.loadingView.hideLoadingView();
        }
        this.updateLoadingProgress(0);
        ResMgr_1.ResMgr.Instance().loadList(AppConfig_1.default.getInitLoadingUrls(), this, function (index, total) {
            this.updateLoadingProgress(index / total * 90);
        }, function () {
            this.loadStartScene();
        });
        // Laya.loader.load(AppConfig.getInitLoadingUrls(),Laya.Handler.create(this,this.loadStartScene),Laya.Handler.create(this,function(progress : number) : void{
        // 	this.updateLoadingProgress(progress * 90);
        // }));
    };
    Main.prototype.loadStartScene = function () {
        var data = Laya.loader.getRes("res/data.json");
        MapFontInfo_1.default.DataSource = data;
        Laya.Scene.open("main/MainGame.scene", true, null, Laya.Handler.create(this, this.onGameStart), Laya.Handler.create(this, this.onGameLoadProgress, [], false));
        if (Laya.Browser.onMiniGame) {
            Laya.MiniAdpter.sendAtlasToOpenDataContext("res/atlas/test.atlas");
        }
        ResMgr_1.ResMgr.Instance().loadList(AppConfig_1.default.getAsynUrls(), this, function (index, total) {
        }, function () {
            AppConfig_1.default.asynUrlsLoaded = true;
        });
    };
    Main.prototype.onGameLoadProgress = function (value) {
        if (Laya.Browser.window.loadingView) {
            Laya.Browser.window.loadingView.loading(value * 100);
        }
        this.updateLoadingProgress(90 + value * 10);
    };
    Main.prototype.onGameStart = function () {
        ControllerMgr_1.default.getInstance(TipController_1.default).init();
        SoundTool_1.default.init();
        // SoundTool.playBgMusic();
    };
    return Main;
}());
//激活启动类
new Main();

},{"./AppConfig":1,"./CodeExpand":2,"./GameConfig":3,"./ResMgr":5,"./script/controller/ControllerMgr":12,"./script/controller/TipController":14,"./script/model/MapFontInfo":15,"./script/scene/LoadingScene":25,"./script/scene/SceneMgr":28,"./script/tool/SoundTool":30}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ResMgr = /** @class */ (function () {
    function ResMgr() {
        this.spineList = {};
        this.textureList = {};
        this.animationList = {};
        this.modelDelayList = {};
        this.idx = 0;
    }
    ResMgr.Instance = function () {
        if (ResMgr.instance == null) {
            ResMgr.instance = new ResMgr();
        }
        return ResMgr.instance;
    };
    ResMgr.prototype.releaseSpine = function (url) {
        if (this.spineList[url]) {
            var spine = this.spineList[url];
            // spine.releaseResource(true);
            for (var i = 0; i < spine["_loadList"].length; i++) {
                var texture = spine.getTexture(spine["_loadList"][i]);
                if (texture) {
                    texture.disposeBitmap();
                    texture.destroy();
                }
            }
            spine.destroy();
            Laya.loader.clearRes(url);
            this.spineList[url] = null;
        }
    };
    ResMgr.prototype.loadSpine = function (url, callbk) {
        var self = this;
        var num = 0;
        var loadFunc = function (spine) {
            var complete = function () {
                self.spineList[spine] = factory;
                if ((url instanceof Array)) {
                    num++;
                    if (num == url.length) {
                        callbk.run();
                    }
                }
                else {
                    callbk.run();
                }
            };
            var factory = new Laya.Templet();
            factory.on(Laya.Event.COMPLETE, self, complete);
            // factory.on(Event.ERROR, this, this.onError);
            factory.loadAni(spine);
        };
        if ((url instanceof Array)) {
            for (var i = 0; i < url.length; i++) {
                loadFunc(url[i]);
            }
        }
        else {
            loadFunc(url);
        }
    };
    ResMgr.prototype.loadTexture = function (url, callbk) {
        var self = this;
        if ((url instanceof Array)) {
            for (var i = 0; i < url.length; i++) {
                if (i == (url.length - 1)) {
                    Laya.Texture2D.load(url[i], callbk);
                }
                else {
                    Laya.Texture2D.load(url[i], null);
                }
            }
        }
        else {
            Laya.Texture2D.load(url, callbk);
        }
        // if (callbk != null) {
        //     callbk.run();
        // }
    };
    ResMgr.prototype.loadPNG = function (url, callbk) {
        if (Laya.loader.getRes(url) != null) {
            // if(Laya.loader.getRes(url).released == true)
            // {
            //     let texture : Laya.Texture = Laya.loader.getRes(url);
            //     texture.bitmap.on(Laya.Event.RECOVERED,this,function() : void{
            //          callbk.run();
            //     });
            //     texture.active();
            //     // texture.load(url);
            //     // callbk.run();
            // }
            // else 
            // {
            callbk.run();
            // }
            return;
        }
        Laya.loader.load(url, callbk, null, "image");
    };
    ResMgr.prototype.getPNG = function (url) {
        return Laya.loader.getRes(url);
    };
    /**
     * 根据图片地址创建sprite
     * @param url 图片地址
     * @param sprite 默认为空 如果不为空 直接在此sprite上绘制
     */
    ResMgr.prototype.createSprite = function (url, sprite) {
        var sp = sprite || new Laya.Sprite();
        var tex;
        if (Laya.loader.getRes(url) == null) {
            this.loadPNG(url, Laya.Handler.create(this, function () {
                tex = this.getPNG(url);
                sp.graphics.drawTexture(tex);
                if (tex) {
                    sp.size(tex.sourceWidth, tex.sourceHeight);
                }
            }));
        }
        else {
            tex = this.getPNG(url);
            sp.graphics.drawTexture(tex);
            if (tex) {
                sp.size(tex.sourceWidth, tex.sourceHeight);
            }
        }
        return sp;
    };
    ResMgr.prototype.createImg = function (url, img) {
        if (!img) {
            img = new Laya.Image();
        }
        this.loadPNG(url, Laya.Handler.create(this, function () {
            img.skin = url;
        }));
        return img;
    };
    ResMgr.prototype.loadModel = function (url, callbk) {
        if (Laya.loader.getRes(url) && Laya.loader.getRes(url)["_children"] && Laya.loader.getRes(url).getChildAt(0)) {
            callbk.run();
            return;
        }
        Laya.loader.create(url, callbk);
    };
    ResMgr.prototype.load = function (url, callbk) {
        if (Laya.loader.getRes(url) != null) {
            callbk.run();
            return;
        }
        Laya.loader.load(url, callbk);
    };
    ResMgr.prototype.loadJson = function (url, callbk) {
        if (Laya.loader.getRes(url) != null) {
            callbk.run();
            return;
        }
        Laya.loader.load(url, callbk, null, Laya.Loader.JSON);
    };
    ResMgr.prototype.loadAtlas = function (url, callbk) {
        if (Laya.loader.getRes(url) != null) {
            callbk.run();
            return;
        }
        Laya.loader.load(url, callbk, null, Laya.Loader.ATLAS);
    };
    ResMgr.prototype.loadAnimation = function (aniUrl, atlasUrl, callbk) {
        if (atlasUrl != "" && atlasUrl != null) {
            if (Laya.loader.getRes(aniUrl) != null && Laya.loader.getRes(atlasUrl) != null) {
                callbk.run();
                return;
            }
        }
        else {
            if (Laya.loader.getRes(aniUrl) != null) {
                callbk.run();
                return;
            }
        }
        Laya.loader.load(aniUrl, Laya.Handler.create(this, function () {
            if (atlasUrl != null && atlasUrl != "") {
                Laya.loader.load(atlasUrl, Laya.Handler.create(this, function () {
                    this.animationList[aniUrl] = atlasUrl;
                    callbk.run();
                }), null, Laya.Loader.ATLAS);
            }
            else {
                callbk.run();
            }
        }, null, false), null, Laya.Loader.JSON);
    };
    ResMgr.prototype.getSpine = function (url) {
        return this.spineList[url];
    };
    ResMgr.prototype.createSpine = function (url, animation, loop, callbk) {
        if (loop === void 0) { loop = true; }
        if (callbk === void 0) { callbk = null; }
        var sk;
        if (this.spineList[url]) {
            sk = this.spineList[url].buildArmature(0);
            if (animation != null) {
                sk.play(animation, loop);
            }
            if (callbk != null) {
                callbk.runWith(sk);
            }
        }
        else {
            sk = new Laya.Skeleton();
            this.loadSpine(url, Laya.Handler.create(this, function () {
                sk.init(this.spineList[url], 0);
                if (animation != null) {
                    sk.play(animation, loop);
                }
                if (callbk != null) {
                    callbk.runWith(sk);
                }
            }));
        }
        return sk;
    };
    ResMgr.prototype.createAnimation = function (url, animation) {
        var ani = new Laya.Animation();
        ani.source = url;
        if (animation) {
            ani.play(null, true, animation);
        }
        return ani;
    };
    ResMgr.prototype.getTexture = function (url, callbk) {
        var res = Laya.loader.getRes(url);
        if (res) {
            callbk.runWith(res);
        }
        else {
            this.loadTexture(url, callbk);
        }
    };
    ResMgr.prototype.tryGetTexture = function (url) {
        var res = Laya.loader.getRes(url);
        if (res) {
            return res;
        }
        else {
            return null;
        }
    };
    ResMgr.prototype.loadList = function (urls, caller, onProgress, onComplete) {
        if (urls.length == 0) {
            onComplete.call(caller);
            return;
        }
        var item = {
            id: this.idx,
            urls: urls,
            caller: caller,
            index: 0,
            onProgress: onProgress,
            onComplete: onComplete
        };
        this.idx++;
        this.startLoad(item);
    };
    ResMgr.prototype.startLoad = function (item) {
        if (item.urls.length <= item.index) {
            if (item.onComplete != null) {
                item.onComplete.call(item.caller);
            }
            return;
        }
        var url = item.urls[item.index];
        item.index++;
        if (item.onProgress != null) {
            item.onProgress.call(item.caller, item.index, item.urls.length);
        }
        this.loadOnce(url, this.startLoad, item);
    };
    ResMgr.prototype.loadOnce = function (url, callBack, item) {
        if (url instanceof Object) {
            url = url.url;
        }
        var type = url.substr(url.indexOf('.') + 1).toLowerCase();
        var f = Laya.Handler.create(this, function (par_callBk, par_this, par_item, par_url) {
            par_callBk.call(par_this, par_item);
        }, [callBack, this, item, url]);
        switch (type) {
            case "png":
                if (url.indexOf("texture/") == -1) {
                    this.loadPNG(url, f);
                }
                else {
                    this.loadTexture(url, f);
                }
                break;
            case "sk":
                this.loadSpine(url, f);
                break;
            case "lh":
                this.loadModel(url, f);
                break;
            case "json":
            case "lang":
                this.loadJson(url, f);
                break;
            case "atlas":
                this.loadAtlas(url, f);
                break;
            case "ani":
                this.loadAnimation(url, null, f);
                break;
            default:
                this.load(url, f);
                break;
        }
    };
    ResMgr.instance = null;
    return ResMgr;
}());
exports.ResMgr = ResMgr;

},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var URI = /** @class */ (function (_super) {
    __extends(URI, _super);
    function URI() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    URI.prefabUrl = "prefab/";
    URI.spineUrl = "res/spine/";
    URI.soundUrl = "sound/";
    return URI;
}(Laya.Script));
exports.default = URI;

},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 子弹脚本，实现子弹飞行逻辑及对象池回收机制
 */
var Bullet = /** @class */ (function (_super) {
    __extends(Bullet, _super);
    function Bullet() {
        return _super.call(this) || this;
    }
    Bullet.prototype.onEnable = function () {
        //设置初始速度
        var rig = this.owner.getComponent(Laya.RigidBody);
        rig.setVelocity({ x: 0, y: -10 });
    };
    Bullet.prototype.onTriggerEnter = function (other, self, contact) {
        //如果被碰到，则移除子弹
        this.owner.removeSelf();
    };
    Bullet.prototype.onUpdate = function () {
        //如果子弹超出屏幕，则移除子弹
        if (this.owner.y < -10) {
            this.owner.removeSelf();
        }
    };
    Bullet.prototype.onDisable = function () {
        //子弹被移除时，回收子弹到对象池，方便下次复用，减少对象创建开销
        Laya.Pool.recover("bullet", this.owner);
    };
    return Bullet;
}(Laya.Script));
exports.default = Bullet;

},{}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameUI_1 = require("./GameUI");
/**
 * 掉落盒子脚本，实现盒子碰撞及回收流程
 */
var DropBox = /** @class */ (function (_super) {
    __extends(DropBox, _super);
    function DropBox() {
        var _this = _super.call(this) || this;
        /**盒子等级 */
        _this.level = 1;
        return _this;
    }
    DropBox.prototype.onEnable = function () {
        /**获得组件引用，避免每次获取组件带来不必要的查询开销 */
        this._rig = this.owner.getComponent(Laya.RigidBody);
        this.level = Math.round(Math.random() * 5) + 1;
        this._text = this.owner.getChildByName("levelTxt");
        this._text.text = this.level + "";
    };
    DropBox.prototype.onUpdate = function () {
        //让持续盒子旋转
        this.owner.rotation++;
    };
    DropBox.prototype.onTriggerEnter = function (other, self, contact) {
        var owner = this.owner;
        if (other.label === "buttle") {
            //碰撞到子弹后，增加积分，播放声音特效
            if (this.level > 1) {
                this.level--;
                this._text.changeText(this.level + "");
                owner.getComponent(Laya.RigidBody).setVelocity({ x: 0, y: -10 });
                Laya.SoundManager.playSound("sound/hit.wav");
            }
            else {
                if (owner.parent) {
                    var effect = Laya.Pool.getItemByCreateFun("effect", this.createEffect, this);
                    effect.pos(owner.x, owner.y);
                    owner.parent.addChild(effect);
                    effect.play(0, true);
                    owner.removeSelf();
                    Laya.SoundManager.playSound("sound/destroy.wav");
                }
            }
            GameUI_1.default.instance.addScore(1);
        }
        else if (other.label === "ground") {
            //只要有一个盒子碰到地板，则停止游戏
            owner.removeSelf();
            GameUI_1.default.instance.stopGame();
        }
    };
    /**使用对象池创建爆炸动画 */
    DropBox.prototype.createEffect = function () {
        var ani = new Laya.Animation();
        ani.loadAnimation("test/TestAni.ani");
        ani.on(Laya.Event.COMPLETE, null, recover);
        function recover() {
            ani.removeSelf();
            Laya.Pool.recover("effect", ani);
        }
        return ani;
    };
    DropBox.prototype.onDisable = function () {
        //盒子被移除时，回收盒子到对象池，方便下次复用，减少对象创建开销。
        Laya.Pool.recover("dropBox", this.owner);
    };
    return DropBox;
}(Laya.Script));
exports.default = DropBox;

},{"./GameUI":10}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 游戏控制脚本。定义了几个dropBox，bullet，createBoxInterval等变量，能够在IDE显示及设置该变量
 * 更多类型定义，请参考官方文档
 */
var GameControl = /** @class */ (function (_super) {
    __extends(GameControl, _super);
    function GameControl() {
        var _this = _super.call(this) || this;
        /** @prop {name:createBoxInterval,tips:"间隔多少毫秒创建一个下跌的容器",type:int,default:1000}*/
        _this.createBoxInterval = 1000;
        /**开始时间*/
        _this._time = 0;
        /**是否已经开始游戏 */
        _this._started = false;
        return _this;
    }
    GameControl.prototype.onEnable = function () {
        this._time = Date.now();
        this._gameBox = this.owner.getChildByName("gameBox");
    };
    GameControl.prototype.onUpdate = function () {
        //每间隔一段时间创建一个盒子
        var now = Date.now();
        if (now - this._time > this.createBoxInterval && this._started) {
            this._time = now;
            this.createBox();
        }
    };
    GameControl.prototype.createBox = function () {
        //使用对象池创建盒子
        var box = Laya.Pool.getItemByCreateFun("dropBox", this.dropBox.create, this.dropBox);
        box.pos(Math.random() * (Laya.stage.width - 100), -100);
        this._gameBox.addChild(box);
    };
    GameControl.prototype.onStageClick = function (e) {
        //停止事件冒泡，提高性能，当然也可以不要
        e.stopPropagation();
        //舞台被点击后，使用对象池创建子弹
        var flyer = Laya.Pool.getItemByCreateFun("bullet", this.bullet.create, this.bullet);
        flyer.pos(Laya.stage.mouseX, Laya.stage.mouseY);
        this._gameBox.addChild(flyer);
    };
    /**开始游戏，通过激活本脚本方式开始游戏*/
    GameControl.prototype.startGame = function () {
        if (!this._started) {
            this._started = true;
            this.enabled = true;
        }
    };
    /**结束游戏，通过非激活本脚本停止游戏 */
    GameControl.prototype.stopGame = function () {
        this._started = false;
        this.enabled = false;
        this.createBoxInterval = 1000;
        this._gameBox.removeChildren();
    };
    return GameControl;
}(Laya.Script));
exports.default = GameControl;

},{}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("./../ui/layaMaxUI");
var GameControl_1 = require("./GameControl");
/**
 * 本示例采用非脚本的方式实现，而使用继承页面基类，实现页面逻辑。在IDE里面设置场景的Runtime属性即可和场景进行关联
 * 相比脚本方式，继承式页面类，可以直接使用页面定义的属性（通过IDE内var属性定义），比如this.tipLbll，this.scoreLbl，具有代码提示效果
 * 建议：如果是页面级的逻辑，需要频繁访问页面内多个元素，使用继承式写法，如果是独立小模块，功能单一，建议用脚本方式实现，比如子弹脚本。
 */
var GameUI = /** @class */ (function (_super) {
    __extends(GameUI, _super);
    function GameUI() {
        var _this = _super.call(this) || this;
        GameUI.instance = _this;
        //关闭多点触控，否则就无敌了
        Laya.MouseManager.multiTouchEnabled = false;
        return _this;
    }
    GameUI.prototype.onEnable = function () {
        this._control = this.getComponent(GameControl_1.default);
        //点击提示文字，开始游戏
        this.tipLbll.on(Laya.Event.CLICK, this, this.onTipClick);
    };
    GameUI.prototype.onTipClick = function (e) {
        this.tipLbll.visible = false;
        this._score = 0;
        this.scoreLbl.text = "";
        this._control.startGame();
    };
    /**增加分数 */
    GameUI.prototype.addScore = function (value) {
        if (value === void 0) { value = 1; }
        this._score += value;
        this.scoreLbl.changeText("分数：" + this._score);
        //随着分数越高，难度增大
        if (this._control.createBoxInterval > 600 && this._score % 20 == 0)
            this._control.createBoxInterval -= 20;
    };
    /**停止游戏 */
    GameUI.prototype.stopGame = function () {
        this.tipLbll.visible = true;
        this.tipLbll.text = "游戏结束了，点击屏幕重新开始";
        this._control.stopGame();
    };
    return GameUI;
}(layaMaxUI_1.ui.test.TestSceneUI));
exports.default = GameUI;

},{"./../ui/layaMaxUI":32,"./GameControl":9}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ControllerBase = /** @class */ (function (_super) {
    __extends(ControllerBase, _super);
    function ControllerBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ControllerBase.prototype.getSign = function () {
        return this["__proto__"].constructor.name;
    };
    // public static getInstance<T>(c : new() => T) : T
    // {
    //     let sign = c["name"];
    //     let item = ControllerBase._controllerObjs[sign];
    //     if(item == null)
    //     {
    //         item = new c();
    //         ControllerBase._controllerObjs[sign] = item;
    //     }
    //     return item;
    // }
    ControllerBase.prototype.show = function () {
    };
    ControllerBase.prototype.close = function () {
    };
    ControllerBase.prototype.destroy = function () {
    };
    ControllerBase._controllerObjs = {};
    return ControllerBase;
}(Laya.Script));
exports.default = ControllerBase;

},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ControllerMgr = /** @class */ (function () {
    function ControllerMgr() {
    }
    ControllerMgr.getInstance = function (c) {
        var sign = c["name"];
        var item = ControllerMgr._controllerObjs[sign];
        if (item == null) {
            item = new c();
            ControllerMgr._controllerObjs[sign] = item;
        }
        return item;
    };
    ControllerMgr._controllerObjs = {};
    return ControllerMgr;
}());
exports.default = ControllerMgr;
window["ControllerMgr"] = ControllerMgr;

},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ControllerBase_1 = require("./ControllerBase");
var PlayerInfo_1 = require("../model/PlayerInfo");
var PlayerController = /** @class */ (function (_super) {
    __extends(PlayerController, _super);
    function PlayerController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.myPlayerInfo = new PlayerInfo_1.default();
        return _this;
    }
    return PlayerController;
}(ControllerBase_1.default));
exports.default = PlayerController;

},{"../model/PlayerInfo":18,"./ControllerBase":11}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ControllerBase_1 = require("./ControllerBase");
var GameConfig_1 = require("../../GameConfig");
var TipItem_1 = require("../prefeb/TipItem");
var TipController = /** @class */ (function (_super) {
    __extends(TipController, _super);
    function TipController() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._labels = [];
        _this._startY = 960;
        _this._tipItems = [];
        _this._tipItemStartY = 550;
        return _this;
    }
    Object.defineProperty(TipController.prototype, "tipSpr", {
        get: function () {
            return this._tipSpr;
        },
        enumerable: true,
        configurable: true
    });
    TipController.prototype.init = function () {
        this._tipSpr = new Laya.Sprite();
        this._tipSpr.name = "TipSpr";
        Laya.stage.addChild(this._tipSpr);
        Laya.loader.load("prefab/TipItem.json", Laya.Handler.create(this, this.onLoadTipItemComplete));
    };
    TipController.prototype.onLoadTipItemComplete = function () {
        this._tipItemPrefab = new Laya.Prefab();
        this._tipItemPrefab.json = Laya.loader.getRes("prefab/TipItem.json");
    };
    TipController.prototype.showLeftBottomTip = function (text) {
        var label = new Laya.Label();
        label.color = "#204800";
        label.text = text;
        label.font = "SimHei";
        label.fontSize = 30;
        label.anchorY = 1;
        label.y = this._startY;
        this._tipSpr.addChild(label);
        this._labels.push(label);
        this.sortLabels();
        Laya.timer.once(1000, this, function () {
            Laya.Tween.to(label, { alpha: 0 }, 300);
        });
        Laya.timer.once(1300, this, function () {
            this._labels.splice(this._labels.indexOf(label), 1);
            Laya.timer.clearAll(label);
            label.destroy(true);
        });
    };
    TipController.prototype.sortLabels = function () {
        for (var i = void 0; i < this._labels.length; i++) {
            var label = this._labels[i];
            var targetY = this._startY - 40 * i;
            Laya.Tween.to(label, { y: targetY }, 100);
        }
    };
    TipController.prototype.showTip = function (txt) {
        if (this._tipItemPrefab != null) {
            var tipItemSpr_1 = Laya.Pool.getItemByCreateFun("TipItem", this._tipItemPrefab.create, this._tipItemPrefab);
            var tipItemScript = tipItemSpr_1.getComponent(TipItem_1.default);
            tipItemScript.text = txt;
            this._tipSpr.addChild(tipItemSpr_1);
            tipItemSpr_1.x = (GameConfig_1.default.width - tipItemSpr_1.width) / 2;
            tipItemSpr_1.y = this._tipItemStartY - 60;
            this._tipItems.push(tipItemSpr_1);
            this.sortTipItems();
            Laya.timer.once(1000, this, function () {
                Laya.Tween.to(tipItemSpr_1, { alpha: 0 }, 300);
            });
            Laya.timer.once(1300, this, function () {
                this._tipItems.splice(this._tipItems.indexOf(tipItemSpr_1), 1);
                Laya.timer.clearAll(tipItemSpr_1);
                tipItemSpr_1.destroy(true);
            });
        }
    };
    TipController.prototype.sortTipItems = function () {
        for (var i = 0; i < this._tipItems.length; i++) {
            var label = this._tipItems[i];
            var targetY = this._tipItemStartY - 60 * (this._tipItems.length - i);
            Laya.Tween.to(label, { y: targetY }, 100);
        }
    };
    return TipController;
}(ControllerBase_1.default));
exports.default = TipController;
window["TipController"] = TipController;

},{"../../GameConfig":3,"../prefeb/TipItem":24,"./ControllerBase":11}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../../AppConfig");
var ModelBase_1 = require("./ModelBase");
var ResMgr_1 = require("../../ResMgr");
var URI_1 = require("../../URI");
var MapFontInfo = /** @class */ (function (_super) {
    __extends(MapFontInfo, _super);
    function MapFontInfo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._quality = 1;
        return _this;
    }
    MapFontInfo.getGroup = function (font) {
        if (MapFontInfo._groupCache[font] == null) {
            var arr = [];
            for (var i = 0; i < MapFontInfo.DataSource["group"].length; i++) {
                var tempGroup = MapFontInfo.DataSource["group"][i];
                if (tempGroup.indexOf(font) != -1) {
                    arr.push(tempGroup);
                }
            }
            MapFontInfo._groupCache[font] = arr;
        }
        return MapFontInfo._groupCache[font];
    };
    Object.defineProperty(MapFontInfo.prototype, "quality", {
        get: function () {
            return this._quality;
        },
        //1,2,3,4 初始为1，没合成一次升级，最高4级
        set: function (value) {
            if (value > 4) {
                value = 4;
            }
            this._quality = value;
        },
        enumerable: true,
        configurable: true
    });
    MapFontInfo.create = function (data) {
        if (AppConfig_1.default.pools['MapFontInfo'] == null) {
            AppConfig_1.default.pools['MapFontInfo'] = { sign: 'MapFontInfo', pool: MapFontInfo._pool, createCount: 0, recoverCount: 0 };
        }
        AppConfig_1.default.pools['MapFontInfo'].createCount++;
        var cout;
        if (MapFontInfo._pool.length > 0) {
            cout = MapFontInfo._pool.pop();
            cout.isRecover = false;
        }
        else {
            cout = new MapFontInfo();
        }
        if (data != null)
            cout.setDataByKey(data);
        return cout;
    };
    Object.defineProperty(MapFontInfo.prototype, "canHeChengGroup", {
        /**
         * 是否可合成词组
         */
        get: function () {
            var _this = this;
            if (MapFontInfo._heChengCiZuObj[this.text] == null) {
                var cout_1 = [];
                MapFontInfo.DataSource["group"].forEach(function (element) {
                    if (element.indexOf(_this.text) != -1) {
                        cout_1.push(element);
                    }
                });
                MapFontInfo._heChengCiZuObj[this.text] = cout_1;
            }
            return MapFontInfo._heChengCiZuObj[this.text].length > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapFontInfo.prototype, "canHeChengGroups", {
        get: function () {
            if (this.canHeChengGroup) {
                return MapFontInfo._heChengCiZuObj[this.text];
            }
            return [];
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 根据fontId,找出使用这个id的组合列表,未传入fontId，则输出所有组合列表
     * @param id font id
     * @param isExceptSelf 是否排除自己
     */
    MapFontInfo.prototype.getStructInfos = function (fontId, isExceptSelf) {
        var _this = this;
        if (fontId === void 0) { fontId = null; }
        if (isExceptSelf === void 0) { isExceptSelf = true; }
        var cout = [];
        if (fontId == this.id && isExceptSelf == false) {
            cout.push(fontId.toString());
        }
        else {
            this.structInfo.split(",").forEach(function (element) {
                if (fontId == null) {
                    if (element == _this.id.toString()) {
                        return;
                    }
                    cout.push(element);
                }
                else {
                    if (isExceptSelf && element == fontId.toString()) {
                        return;
                    }
                    if (element.split("_").indexOf(fontId.toString()) != -1) {
                        cout.push(element);
                    }
                }
            });
        }
        return cout;
    };
    Object.defineProperty(MapFontInfo.prototype, "canHeChengFont", {
        /**
         * 是否可合成其他汉子
         */
        get: function () {
            var _this = this;
            if (MapFontInfo._heChengHanZiObj[this.text] == null) {
                var cout_2 = [];
                MapFontInfo.DataSource["font"].forEach(function (element) {
                    var fontInfo = MapFontInfo.create();
                    fontInfo.setDataByValueArr(element);
                    var structInfos = fontInfo.getStructInfos(_this.id);
                    if (structInfos.length > 0) {
                        cout_2.push(fontInfo);
                    }
                });
                MapFontInfo._heChengHanZiObj[this.text] = cout_2;
            }
            return MapFontInfo._heChengHanZiObj[this.text].length > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapFontInfo.prototype, "canHeChengFontInfos", {
        get: function () {
            if (this.canHeChengFont) {
                return MapFontInfo._heChengHanZiObj[this.text];
            }
            return [];
        },
        enumerable: true,
        configurable: true
    });
    MapFontInfo.prototype.getStuntFontEffect = function () {
        if (!this.isStuntFont) {
            return null;
        }
        if (this._stuntFontEffect == null) {
            this._stuntFontEffect = ResMgr_1.ResMgr.Instance().createSpine(URI_1.default.spineUrl + "other_wupinghuanrao_kin_little.sk", "animation", true);
            this._stuntFontEffect.x = this._stuntFontEffect.y = 44;
            this._stuntFontEffect.scaleX = this._stuntFontEffect.scaleY = 1.3;
        }
        return this._stuntFontEffect;
    };
    MapFontInfo.prototype.destroyStuntEffect = function () {
        if (this._stuntFontEffect) {
            this._stuntFontEffect.destroy(true);
            this._stuntFontEffect = null;
        }
    };
    MapFontInfo.prototype.getStruct = function () {
        return MapFontInfo.DataSource["font_struct"];
    };
    MapFontInfo.prototype.recover = function () {
        if (this.isRecover) {
            return;
        }
        if (this._stuntFontEffect) {
            this._stuntFontEffect.destroy(true);
        }
        this._stuntFontEffect = null;
        if (AppConfig_1.default.pools['MapFontInfo'] == null) {
            AppConfig_1.default.pools['MapFontInfo'] = { sign: 'MapFontInfo', pool: MapFontInfo._pool, createCount: 0, recoverCount: 0 };
        }
        AppConfig_1.default.pools['MapFontInfo'].recoverCount++;
        MapFontInfo._pool.push(this);
        this.isRecover = true;
    };
    MapFontInfo.prototype.setDataByValueArr = function (dataArr) {
        var fontStruct = MapFontInfo.DataSource["font_struct"];
        var obj;
        for (var i = 0; i < dataArr.length; i++) {
            if (fontStruct.length > i)
                this[fontStruct[i]] = dataArr[i];
        }
    };
    MapFontInfo.prototype.setDataByKey = function (value) {
        var obj;
        if (value["text"] == "*") {
            obj = value;
        }
        else {
            var fontStruct = MapFontInfo.DataSource["font_struct"];
            var fontDatas = MapFontInfo.DataSource["font"];
            for (var i = 0; i < fontDatas.length; i++) {
                var fontArr = MapFontInfo.DataSource["font"][i];
                var isMeet = true;
                for (var tempProperty in value) {
                    if (value[tempProperty] != fontArr[fontStruct.indexOf(tempProperty)]) {
                        isMeet = false;
                        break;
                    }
                }
                if (isMeet) {
                    obj = {};
                    for (var j = 0; j < fontStruct.length; j++) {
                        obj[fontStruct[j]] = fontArr[j];
                    }
                    break;
                }
            }
        }
        if (obj != null) {
            this.setData(obj);
        }
    };
    MapFontInfo._groupCache = {};
    MapFontInfo._pool = [];
    MapFontInfo._heChengCiZuObj = {};
    MapFontInfo._heChengHanZiObj = {};
    return MapFontInfo;
}(ModelBase_1.default));
exports.default = MapFontInfo;

},{"../../AppConfig":1,"../../ResMgr":5,"../../URI":6,"./ModelBase":17}],16:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../../AppConfig");
var ModelBase_1 = require("./ModelBase");
var MapFontInfo_1 = require("./MapFontInfo");
var MapStarInfo = /** @class */ (function (_super) {
    __extends(MapStarInfo, _super);
    function MapStarInfo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MapStarInfo.create = function (data) {
        if (AppConfig_1.default.pools['MapStarInfo'] == null) {
            AppConfig_1.default.pools['MapStarInfo'] = { sign: 'MapStarInfo', pool: MapStarInfo._pool, createCount: 0, recoverCount: 0 };
        }
        AppConfig_1.default.pools['MapStarInfo'].createCount++;
        var cout;
        if (MapStarInfo._pool.length > 0) {
            cout = MapStarInfo._pool.pop();
            cout.isRecover = false;
        }
        else {
            cout = new MapStarInfo();
        }
        if (data != null)
            cout.setDataByKey(data);
        return cout;
    };
    MapStarInfo.prototype.getStruct = function () {
        return MapFontInfo_1.default.DataSource["star_struct"];
    };
    MapStarInfo.prototype.recover = function () {
        if (this.isRecover) {
            return;
        }
        if (AppConfig_1.default.pools['MapStarInfo'] == null) {
            AppConfig_1.default.pools['MapStarInfo'] = { sign: 'MapStarInfo', pool: MapStarInfo._pool, createCount: 0, recoverCount: 0 };
        }
        AppConfig_1.default.pools['MapStarInfo'].recoverCount++;
        MapStarInfo._pool.push(this);
        this.isRecover = true;
    };
    MapStarInfo.prototype.setDataByKey = function (value) {
        var obj;
        var struct = this.getStruct();
        var datas = MapFontInfo_1.default.DataSource["star"];
        for (var i = 0; i < datas.length; i++) {
            var fontArr = datas[i];
            var isMeet = true;
            for (var tempProperty in value) {
                if (value[tempProperty] != fontArr[struct.indexOf(tempProperty)]) {
                    isMeet = false;
                    break;
                }
            }
            if (isMeet) {
                obj = {};
                for (var j = 0; j < struct.length; j++) {
                    obj[struct[j]] = fontArr[j];
                }
                break;
            }
        }
        if (obj != null) {
            this.setData(obj);
        }
    };
    MapStarInfo._pool = [];
    return MapStarInfo;
}(ModelBase_1.default));
exports.default = MapStarInfo;

},{"../../AppConfig":1,"./MapFontInfo":15,"./ModelBase":17}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AppConfig_1 = require("../../AppConfig");
var ModelBase = /** @class */ (function () {
    function ModelBase() {
        this.isRecover = false;
        this._____id = ModelBase.modelIdIncrease;
        ModelBase.modelIdIncrease++;
    }
    ModelBase.prototype.setData = function (obj) {
        var struct = this.getStruct();
        if (obj instanceof Array && struct != null) {
            for (var i = 0; i < struct.length; i++) {
                this[struct[i]] = obj[i];
            }
        }
        else {
            for (var tempPro in obj) {
                this[tempPro] = obj[tempPro];
            }
        }
    };
    ModelBase.prototype.getStruct = function () {
        return null;
    };
    ModelBase.prototype.getSign = function () {
        if (this._sign == null) {
            this._sign = this["__proto__"].constructor.name;
        }
        return this._sign;
    };
    ModelBase.create = function (data) {
        if (AppConfig_1.default.pools['ModelBase'] == null) {
            AppConfig_1.default.pools['ModelBase'] = { sign: 'ModelBase', pool: ModelBase._pool, createCount: 0, recoverCount: 0 };
        }
        AppConfig_1.default.pools['ModelBase'].createCount++;
        var cout;
        if (ModelBase._pool.length > 0) {
            cout = ModelBase._pool.pop();
            cout.isRecover = false;
        }
        else {
            cout = new ModelBase();
        }
        if (data != null)
            cout.setDataByKey(data);
        return cout;
    };
    ModelBase.prototype.recover = function () {
        if (this.isRecover) {
            return;
        }
        if (AppConfig_1.default.pools['ModelBase'] == null) {
            AppConfig_1.default.pools['ModelBase'] = { sign: 'ModelBase', pool: ModelBase._pool, createCount: 0, recoverCount: 0 };
        }
        AppConfig_1.default.pools['ModelBase'].recoverCount++;
        ModelBase._pool.push(this);
        this.isRecover = true;
    };
    ModelBase.prototype.setDataByKey = function (value) {
    };
    ModelBase.modelIdIncrease = 0;
    ModelBase._pool = [];
    return ModelBase;
}());
exports.default = ModelBase;

},{"../../AppConfig":1}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ModelBase_1 = require("./ModelBase");
var MapStarInfo_1 = require("./MapStarInfo");
var PlayerInfo = /** @class */ (function (_super) {
    __extends(PlayerInfo, _super);
    function PlayerInfo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.name = "test";
        _this.url = "http://cdn.duitang.com/uploads/item/201410/08/20141008150015_dP8yJ.thumb.700_0.jpeg";
        _this.wannengUseTimes = 3;
        _this.guideUseTimes = 3;
        return _this;
    }
    PlayerInfo.prototype.getStarInfo = function (score) {
        var starNum;
        if (score < 5000) {
            starNum = 0;
        }
        else if (score < 10000) {
            starNum = 1;
        }
        else if (score < 15000) {
            starNum = 2;
        }
        else if (score < 30000) {
            starNum = 3;
        }
        else if (score < 60000) {
            starNum = 4;
        }
        else {
            starNum = 5;
        }
        if (this._starInfo == null || this._starInfo.star_num != starNum) {
            this._starInfo = MapStarInfo_1.default.create();
            if (this._starInfo.star_num != starNum) {
                this._starInfo.setDataByKey({ star_num: starNum });
            }
        }
        return this._starInfo;
    };
    return PlayerInfo;
}(ModelBase_1.default));
exports.default = PlayerInfo;

},{"./MapStarInfo":16,"./ModelBase":17}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PrefebBase_1 = require("./PrefebBase");
var ResMgr_1 = require("../../ResMgr");
var URI_1 = require("../../URI");
var FontGrid = /** @class */ (function (_super) {
    __extends(FontGrid, _super);
    function FontGrid() {
        var _this = _super.call(this) || this;
        /** @prop {name:font, tips:"显示文字", type:String, default:""}*/
        _this.font = "";
        /** @prop {name:numType, tips:"质量 蓝1，红2，紫3，金4", type:Number, default:1}*/
        _this.quality = 1;
        _this.colorArr = ["blue", "red", "puple", "yellow"];
        _this._effects = [];
        return _this;
    }
    FontGrid.prototype.addEffect = function (effect) {
        if (effect == null)
            return;
        this.owner.addChild(effect);
        this._effects.push(effect);
    };
    FontGrid.prototype.clearEffects = function () {
        var _this = this;
        this._effects.forEach(function (element) {
            _this.owner.removeChild(element);
        });
        this._effects = [];
    };
    FontGrid.prototype.onUpdate = function () {
        var img_bg = this.owner.getChildByName("img_bg");
        if (this.font != null) {
            this.owner.getChildByName("txt")["text"] = this.font;
            img_bg.visible = true;
            img_bg.skin = "map/img_" + this.getQualitySign() + "GridBg.png";
        }
        else {
            this.owner.getChildByName("txt")["text"] = "";
            img_bg.visible = false;
        }
    };
    FontGrid.prototype.getQualitySign = function () {
        return this.colorArr[this.quality - 1];
    };
    FontGrid.prototype.onReset = function () {
        this.quality = 1;
    };
    FontGrid.prototype.onDisable = function () {
        this.recover();
    };
    FontGrid.prototype.playHeChengEffect = function () {
        var sk = ResMgr_1.ResMgr.Instance().createSpine(URI_1.default.spineUrl + "other_taozhuangxitong1.sk", "animation", false);
        sk.x = sk.y = 44;
        sk.scaleX = sk.scaleY = 1.7;
        this.owner.addChild(sk);
        sk.on(Laya.Event.STOPPED, this, function (par_sk) {
            par_sk.destroy();
        }, [sk]);
    };
    FontGrid.prototype.reset = function () {
        this.quality = 1;
        this.clearEffects();
    };
    return FontGrid;
}(PrefebBase_1.default));
exports.default = FontGrid;

},{"../../ResMgr":5,"../../URI":6,"./PrefebBase":22}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PrefebBase_1 = require("./PrefebBase");
var AppConfig_1 = require("../../AppConfig");
var GameResult = /** @class */ (function (_super) {
    __extends(GameResult, _super);
    function GameResult() {
        return _super.call(this) || this;
    }
    GameResult.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.owner["height"] = Laya.stage.height;
        this.txt_score.text = this.score.toString();
        this.btn_home.clickHandler = Laya.Handler.create(this, function () {
            this.showHomeHandler.run();
        }, null, false);
        this.btn_tryAgain.clickHandler = Laya.Handler.create(this, function () {
            if (AppConfig_1.default.platform == "wx") {
                this.restartHandler.runWith(1);
                wx["shareAppMessage"]({
                    title: '我在这个游戏里面得了' + this.score + "分",
                    imageUrl: "https://mmocgame.qpic.cn/wechatgame/iaUVuxArE9L9G28F6XrxKAIEtJOs9x1Ycm2MYmC2Uz5T9O4RLq0ejvG3ic2KlUBiaVf/0",
                    imageUrlId: "NelenHPLRXK1-AWENn0aZw"
                });
            }
            else {
                this.restartHandler.run();
            }
        }, null, false);
    };
    GameResult.prototype.onEnable = function () {
    };
    GameResult.prototype.onDisable = function () {
        this.btn_home.offAll();
        this.btn_tryAgain.offAll();
    };
    return GameResult;
}(PrefebBase_1.default));
exports.default = GameResult;

},{"../../AppConfig":1,"./PrefebBase":22}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PrefebBase_1 = require("./PrefebBase");
var AppConfig_1 = require("../../AppConfig");
var ControllerMgr_1 = require("../controller/ControllerMgr");
var TipController_1 = require("../controller/TipController");
var SoundTool_1 = require("../tool/SoundTool");
var GameSetting = /** @class */ (function (_super) {
    __extends(GameSetting, _super);
    function GameSetting() {
        return _super.call(this) || this;
    }
    GameSetting.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.btn_home.clickHandler = Laya.Handler.create(this, function () {
            this.showHomeHandler.run();
        }, null, false);
        this.btn_tryAgain.clickHandler = Laya.Handler.create(this, function () {
            if (AppConfig_1.default.platform == "wx") {
                this.restartHandler.runWith(1);
                wx["shareAppMessage"]({
                    title: '发现有个有趣的游戏',
                    imageUrl: "https://mmocgame.qpic.cn/wechatgame/iaUVuxArE9L9G28F6XrxKAIEtJOs9x1Ycm2MYmC2Uz5T9O4RLq0ejvG3ic2KlUBiaVf/0",
                    imageUrlId: "NelenHPLRXK1-AWENn0aZw"
                });
            }
            else {
                this.restartHandler.run();
            }
        }, null, false);
        this.btn_share.clickHandler = (Laya.Handler.create(this, function (e) {
            // if(e.type != Laya.Event.MOUSE_UP)return;
            if (AppConfig_1.default.platform == "wx") {
                wx["shareAppMessage"]({
                    title: '发现有个有趣的游戏',
                    imageUrl: "https://mmocgame.qpic.cn/wechatgame/iaUVuxArE9L9G28F6XrxKAIEtJOs9x1Ycm2MYmC2Uz5T9O4RLq0ejvG3ic2KlUBiaVf/0",
                    imageUrlId: "NelenHPLRXK1-AWENn0aZw"
                });
            }
            else {
                ControllerMgr_1.default.getInstance(TipController_1.default).showTip("尽情期待");
            }
        }, null, false));
        this.btn_close.clickHandler = (Laya.Handler.create(this, function (e) {
            // if(e.type != Laya.Event.MOUSE_UP)return;
            this.onCloseHandler.run();
        }, null, false));
        this.btn_music.on(Laya.Event.MOUSE_DOWN, this, this.onDragMouseDown);
        this.btn_effect.on(Laya.Event.MOUSE_DOWN, this, this.onDragMouseDown);
        this.refresh();
    };
    GameSetting.prototype.onDragMouseDown = function (e) {
        this._dragTarget = e.currentTarget;
        Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onStageMouseUp2);
        Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.onStageMouseMove2);
    };
    GameSetting.prototype.onStageMouseUp2 = function (e) {
        this._dragTarget = null;
        Laya.stage.off(Laya.Event.MOUSE_UP, this, this.onStageMouseUp2);
        Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.onStageMouseMove2);
    };
    GameSetting.prototype.onStageMouseMove2 = function (e) {
        var point = new Laya.Point(e.stageX, e.stageY);
        var progress;
        if (this._dragTarget == this.btn_effect) {
            progress = this.progress_effect;
        }
        else {
            progress = this.progress_music;
        }
        point = this._dragTarget.parent["globalToLocal"](point);
        var x = point.x - progress.x - this._dragTarget.width / 2;
        if (x < 0) {
            x = 0;
        }
        if (x > progress.width - this._dragTarget.width) {
            x = progress.width - this._dragTarget.width;
        }
        var num = x / (progress.width - this._dragTarget.width);
        progress.value = num;
        if (progress == this.progress_effect) {
            SoundTool_1.default.setSoundVolume(num);
        }
        else {
            SoundTool_1.default.setMusicVolume(num);
        }
        this.refresh();
    };
    GameSetting.prototype.refresh = function () {
        this.progress_effect.value = SoundTool_1.default.getSoundVolume();
        this.btn_effect.x = this.progress_effect.x + (this.progress_effect.width - this.btn_effect.width) * this.progress_effect.value + this.btn_effect.width / 2;
        this.progress_music.value = SoundTool_1.default.getMusicVolume();
        this.btn_music.x = this.progress_music.x + (this.progress_music.width - this.btn_music.width) * this.progress_music.value + this.btn_music.width / 2;
    };
    GameSetting.prototype.onEnable = function () {
    };
    GameSetting.prototype.onDisable = function () {
        this.btn_home.offAll();
        this.btn_tryAgain.offAll();
        this.btn_share.offAll();
    };
    return GameSetting;
}(PrefebBase_1.default));
exports.default = GameSetting;

},{"../../AppConfig":1,"../controller/ControllerMgr":12,"../controller/TipController":14,"../tool/SoundTool":30,"./PrefebBase":22}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PrefebBase = /** @class */ (function (_super) {
    __extends(PrefebBase, _super);
    function PrefebBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PrefebBase.setPrefeb = function (value) {
        PrefebBase._prefeb = value;
    };
    PrefebBase.prototype.onAwake = function () {
        for (var i = 0; i < this.owner.numChildren; i++) {
            var element = this.owner.getChildAt(i);
            if (element.name == "" || element.name.indexOf("_") == -1) {
                continue;
            }
            var tempPropertyList = element.name.split("_");
            switch (tempPropertyList[0]) {
                case "list":
                case "txt":
                case "img":
                case "btn":
                case "progress":
                    this[element.name] = element;
                    break;
                default:
                    break;
            }
        }
    };
    PrefebBase.getPrefeb = function () {
        return this._prefeb;
    };
    PrefebBase.getSign = function () {
        return this["__proto__"].constructor.name;
    };
    PrefebBase.create = function () {
        return Laya.Pool.getItemByCreateFun(PrefebBase.getSign(), PrefebBase._prefeb.create, PrefebBase._prefeb);
    };
    PrefebBase.prototype.recover = function () {
        Laya.Pool.recover(PrefebBase.getSign(), this);
    };
    return PrefebBase;
}(Laya.Script));
exports.default = PrefebBase;

},{}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PrefebBase_1 = require("./PrefebBase");
var AppConfig_1 = require("../../AppConfig");
var ControllerMgr_1 = require("../controller/ControllerMgr");
var TipController_1 = require("../controller/TipController");
var WXTool_1 = require("../tool/WXTool");
var PlayerController_1 = require("../controller/PlayerController");
var StartGame = /** @class */ (function (_super) {
    __extends(StartGame, _super);
    // 更多参数说明请访问: https://ldc2.layabox.com/doc/?nav=zh-as-2-4-0
    function StartGame() {
        return _super.call(this) || this;
    }
    StartGame.prototype.onAwake = function () {
        var _this = this;
        _super.prototype.onAwake.call(this);
        this.owner["height"] = Laya.stage.height;
        if (AppConfig_1.default.platform == "wx") {
            var scaleX = Laya.MiniAdpter.window.screen.availWidth / 640;
            var h = AppConfig_1.default.getMobileHeight();
            var scaleY = Laya.MiniAdpter.window.screen.availHeight * (h / Laya.stage.height) / h;
            // let scaleY = Laya.MiniAdpter.window.screen.availHeight* (1136 / Laya.stage.height) / 1136;
            var button_1 = wx["createUserInfoButton"]({
                type: 'image',
                image: 'btn_startGame.png',
                style: {
                    left: this.btn_startGame.x * scaleX,
                    top: this.btn_startGame.y * scaleY,
                    width: this.btn_startGame.width * scaleX,
                    height: this.btn_startGame.height * scaleY,
                    lineHeight: 40,
                    color: '#ffffff',
                    textAlign: 'center',
                    fontSize: 16,
                    borderRadius: 4
                }
            });
            button_1.onTap(function (res) {
                console.log(res);
                ControllerMgr_1.default.getInstance(PlayerController_1.default).myPlayerInfo.name = res.userInfo.nickName;
                _this.handler.run();
                button_1.destroy();
            });
            this.btn_startGame.destroy();
            this.btn_startGame = button_1;
            WXTool_1.default.addBtn(this.btn_startGame);
        }
        else {
            this.btn_startGame.zoomOn(Laya.Handler.create(this, function (e) {
                if (e.type == Laya.Event.MOUSE_UP)
                    this.handler.run();
            }, null, false));
        }
        this.btn_showRank.zoomOn(Laya.Handler.create(this, function (e) {
            if (e.type != Laya.Event.MOUSE_UP)
                return;
            if (AppConfig_1.default.platform == "wx") {
                this.onShowRank.run();
            }
            else {
                ControllerMgr_1.default.getInstance(TipController_1.default).showTip("尽情期待");
            }
        }, null, false));
        this.btn_share.zoomOn(Laya.Handler.create(this, function (e) {
            if (e.type != Laya.Event.MOUSE_UP)
                return;
            if (AppConfig_1.default.platform == "wx") {
                wx["shareAppMessage"]({
                    title: '发现有个有趣的游戏',
                    imageUrl: "https://mmocgame.qpic.cn/wechatgame/iaUVuxArE9L9G28F6XrxKAIEtJOs9x1Ycm2MYmC2Uz5T9O4RLq0ejvG3ic2KlUBiaVf/0",
                    imageUrlId: "NelenHPLRXK1-AWENn0aZw"
                });
            }
            else {
                ControllerMgr_1.default.getInstance(TipController_1.default).showTip("尽情期待");
            }
        }, null, false));
    };
    StartGame.prototype.onEnable = function () {
    };
    StartGame.prototype.onDisable = function () {
        if (AppConfig_1.default.platform == "wx") {
            WXTool_1.default.removeBtn(this.btn_startGame);
            this.btn_startGame.destroy(true);
        }
        else {
            this.btn_startGame.offAll();
        }
    };
    return StartGame;
}(PrefebBase_1.default));
exports.default = StartGame;

},{"../../AppConfig":1,"../controller/ControllerMgr":12,"../controller/PlayerController":13,"../controller/TipController":14,"../tool/WXTool":31,"./PrefebBase":22}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PrefebBase_1 = require("./PrefebBase");
var TipItem = /** @class */ (function (_super) {
    __extends(TipItem, _super);
    function TipItem() {
        var _this = _super.call(this) || this;
        /** @prop {name:text, tips:"字符串类型示例", type:String, default:"d"}*/
        _this.text = "d";
        return _this;
    }
    TipItem.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.txt_text.text = this.text;
        this.img_bg.width = this.txt_text.displayWidth + 36;
        this.owner["width"] = this.img_bg.width;
    };
    TipItem.prototype.onEnable = function () {
    };
    TipItem.prototype.onDisable = function () {
    };
    return TipItem;
}(PrefebBase_1.default));
exports.default = TipItem;

},{"./PrefebBase":22}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SceneBase_1 = require("./SceneBase");
var LoadingScene = /** @class */ (function (_super) {
    __extends(LoadingScene, _super);
    function LoadingScene() {
        return _super.call(this) || this;
    }
    LoadingScene.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.owner["height"] = Laya.stage.height;
    };
    LoadingScene.prototype.onEnable = function () {
    };
    LoadingScene.prototype.onDisable = function () {
    };
    /**
     * 更新进度条百分比
     * @param value 百分比 0-100
     */
    LoadingScene.prototype.updatePercent = function (value) {
        this.txt_progress.text = "正在加载资源 " + value + "%";
    };
    return LoadingScene;
}(SceneBase_1.default));
exports.default = LoadingScene;

},{"./SceneBase":27}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MapFontInfo_1 = require("../model/MapFontInfo");
var StartGame_1 = require("../prefeb/StartGame");
var SceneBase_1 = require("./SceneBase");
var FontGrid_1 = require("../prefeb/FontGrid");
var PlayerController_1 = require("../controller/PlayerController");
var GameResult_1 = require("../prefeb/GameResult");
var AppConfig_1 = require("../../AppConfig");
var TipController_1 = require("../controller/TipController");
var ControllerMgr_1 = require("../controller/ControllerMgr");
var SoundTool_1 = require("../tool/SoundTool");
var GameSetting_1 = require("../prefeb/GameSetting");
var NativeBridgeAndroid_1 = require("../tool/NativeBridgeAndroid");
var GameState;
(function (GameState) {
    GameState[GameState["End"] = 0] = "End";
    GameState[GameState["Pause"] = 1] = "Pause";
    GameState[GameState["Playing"] = 2] = "Playing";
    GameState[GameState["init"] = 3] = "init";
    GameState[GameState["EffectPause"] = 4] = "EffectPause"; //释放特效导致的暂停
})(GameState || (GameState = {}));
var MainGameScene = /** @class */ (function (_super) {
    __extends(MainGameScene, _super);
    function MainGameScene() {
        var _this = _super.call(this) || this;
        _this._fonts = [];
        _this._sysDropingFontInfos = []; //消除产生的新字，自动下落
        _this._sysDispelFontInfoStack = []; //消除产生的新字，在自动下落完毕后，存储，用于所有字下落完毕统一执行消除操作
        _this._startPoint = new Laya.Point(2, 0);
        _this._maxTickTime = 80;
        _this._sysTickTime = 0;
        _this._maxSysTickTime = 16;
        _this._words = []; //左边字符列表，欢迎字符列表
        _this._splitFontWords = []; //分字字符列表
        _this._splitGroupWords = []; //分词字符列表
        _this._minWordsLength = 5;
        _this._isMouseDown = false;
        _this._isQuickDrop = false;
        _this._score = 0; //当前局分数
        _this._debugMode = false; //调试
        _this._debugFonts = [
            null, null, null, null, null,
            null, null, null, null, null,
            null, null, null, null, null,
            null, null, null, null, null,
            null, null, null, null, null,
            null, null, null, null, null,
            null, null, null, null, null,
            "氵", null, null, "氵", null,
        ];
        _this._debugDropFonts = ["十"];
        _this._guideDropFonts = [];
        _this._cacheProperties = ["heCiSplitTimes", "heCizuRate", "ciZuRate", "_score", "_popularGroup", "_guideRate", "buShouRate"];
        _this._stuntFontsCheckArr1 = []; //合成消除确认队列
        _this._stuntFontsCheckArr2 = []; //组词消除确认队列
        _this._checkIds = [];
        _this._guideImgs = {};
        _this._guideRate = 0;
        //生成字
        _this.heCiSplitTimes = 1; //合成当前左边词组失败次数
        _this.heCizuRate = 40; //出现左边那个词组的概率
        _this.hanZiRate = 60; // 出现能跟五列最外边汉字合成汉字的概率
        _this.ciZuRate = 60; // 出现能跟五列最外边汉字合成词组的概率
        _this.buShouRate = 0; //出现特殊部首的概率
        _this._playerEffectInd = 0;
        return _this;
    }
    MainGameScene.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this.owner["height"] = Laya.stage.height;
        switch (AppConfig_1.default.platform) {
            case "wx":
                break;
            default:
                // this.txt_score.y = 80;
                break;
        }
        if (!AppConfig_1.default.hadGuidance()) {
            this._guideDropFonts = ["木", "木", "夕", "想", "又", "欠", "乐", "木", "目", "心", "化", "十"];
            // AppConfig.setGuidance(true);
        }
        this.list_grids.renderHandler = Laya.Handler.create(this, this.onGridRender, null, false);
        this._myPlayerInfo = ControllerMgr_1.default.getInstance(PlayerController_1.default).myPlayerInfo;
        this.btn_pauseOrStart["zoomOn"](Laya.Handler.create(this, this.onPauseOrStartMouseEvent, [], false));
        this.btn_setting["zoomOn"](Laya.Handler.create(this, this.onSettingMouseEvent, [], false));
        this.btn_point["zoomOn"](Laya.Handler.create(this, this.onPointMouseEvent, [], false));
        this.btn_wanneng["zoomOn"](Laya.Handler.create(this, this.onWannengMouseEvent, [], false));
        this.changeGameStatue(GameState.init);
        this.refresh();
        // let sk = ResMgr.Instance().createSpine(URI.spineUrl + "zf_wanqianshijie.sk","hit",true,Laya.Handler.create(this,function() : void{
        //     // this._heChengEffect.destroy();
        //     // this._heChengEffect = null;
        // }));
        // sk.x = sk.y = 44;
        // this.owner.addChild(sk);
    };
    MainGameScene.prototype.onWannengMouseEvent = function (e) {
        var _this = this;
        if (e.type == Laya.Event.MOUSE_UP) {
            if (this._myPlayerInfo.wannengUseTimes > 0) {
                var callBk = function () {
                    _this.changeGameStatue(GameState.Playing);
                    _this._nextDropingFontInfo = MapFontInfo_1.default.create({ text: "*" });
                    _this._myPlayerInfo.wannengUseTimes--;
                    _this.refresh();
                };
                if (AppConfig_1.default.isNative) {
                    this.changeGameStatue(GameState.Pause);
                    NativeBridgeAndroid_1.default.showVedioAd(callBk);
                }
                else {
                    callBk();
                }
                return;
            }
        }
        e.stopPropagation();
    };
    MainGameScene.prototype.onPointMouseEvent = function (e) {
        var _this = this;
        if (e.type == Laya.Event.MOUSE_UP) {
            if (this._myPlayerInfo.guideRemainTimes > 0) {
                return;
            }
            if (this._myPlayerInfo.guideUseTimes > 0) {
                var callBk = function () {
                    _this.changeGameStatue(GameState.Playing);
                    _this._myPlayerInfo.guideRemainTimes = 10;
                    _this._myPlayerInfo.guideUseTimes--;
                    _this.refresh();
                };
                if (AppConfig_1.default.isNative) {
                    this.changeGameStatue(GameState.Pause);
                    NativeBridgeAndroid_1.default.showVedioAd(callBk);
                }
                else {
                    callBk();
                }
                return;
            }
        }
        e.stopPropagation();
    };
    MainGameScene.prototype.onSettingMouseEvent = function (e) {
        if (e.type == Laya.Event.MOUSE_UP) {
            this.changeGameStatue(GameState.Pause);
            this.showGameSetting();
        }
        e.stopPropagation();
    };
    MainGameScene.prototype.onPauseOrStartMouseEvent = function (e) {
        if (e.type == Laya.Event.MOUSE_UP) {
            if (this._gameState == GameState.Pause) {
                this.changeGameStatue(GameState.Playing);
            }
            else {
                //打印当前所有格子信息
                var str = "";
                for (var j = 0; j < this.list_grids.repeatY; j++) {
                    for (var i = 0; i < this.list_grids.repeatX; i++) {
                        if (this._fonts[i][j] == null) {
                            str += "null,";
                        }
                        else {
                            str += "'" + this._fonts[i][j].text + "',";
                        }
                    }
                    str += "\n";
                }
                console.log(str);
                this.changeGameStatue(GameState.Pause);
            }
        }
        e.stopPropagation();
    };
    MainGameScene.prototype.showStartGame = function () {
        var startGameSpr = Laya.Pool.getItemByCreateFun("StartGame", this.prefab_startGame.create, this.prefab_startGame);
        var startGameScript = startGameSpr.getComponent(StartGame_1.default);
        startGameScript.handler = Laya.Handler.create(this, this.changeGameStatue, [GameState.Playing], false);
        startGameScript.onShowRank = Laya.Handler.create(this, this.showRank, null, false);
        this.addPopUp("StartGame", startGameSpr, false, false, false);
    };
    MainGameScene.prototype.showGameResult = function () {
        var gameResultSpr = Laya.Pool.getItemByCreateFun("GameResult", this.prefab_gameResult.create, this.prefab_gameResult);
        var gameResultScript = gameResultSpr.getComponent(GameResult_1.default);
        var storageObj = {
            "wxgame": {
                "score": this._score,
                "update_time": Date.now()
            },
            "score": this._score
        };
        this._dataViewer.postMsg({
            cmd: "wx.setUserCloudStorage",
            data: storageObj
        });
        gameResultScript.score = this._score;
        gameResultScript.showHomeHandler = Laya.Handler.create(this, this.changeGameStatue, [GameState.init], false);
        gameResultScript.restartHandler = Laya.Handler.create(this, this.restart, null, false);
        this.addPopUp("GameResult", gameResultSpr, false, false, false);
    };
    MainGameScene.prototype.showGameSetting = function () {
        var gameSettingSpr = Laya.Pool.getItemByCreateFun("GameSetting", this.prefab_gameSetting.create, this.prefab_gameSetting);
        var gameSettingScript = gameSettingSpr.getComponent(GameSetting_1.default);
        gameSettingScript.onCloseHandler = Laya.Handler.create(this, this.changeGameStatue, [GameState.Playing], false);
        gameSettingScript.showHomeHandler = Laya.Handler.create(this, this.changeGameStatue, [GameState.init], false);
        gameSettingScript.restartHandler = Laya.Handler.create(this, this.restart, null, false);
        this.addPopUp("gameSetting", gameSettingSpr, true, true, false);
    };
    MainGameScene.prototype.restart = function () {
        localStorage.setItem("StorageVersion", null);
        localStorage.setItem("CacheData_1", null);
        this._gameState = GameState.End;
        this.changeGameStatue(GameState.Playing);
    };
    /**
     *
     * @param gameState 变更状态
     * @param nextState 下一个状态
     */
    MainGameScene.prototype.changeGameStatue = function (gameState, nextState) {
        if (nextState === void 0) { nextState = -1; }
        switch (gameState) {
            case GameState.End:
                localStorage.setItem("CacheData_1", null);
                this.showGameResult();
                break;
            case GameState.Playing:
                if (AppConfig_1.default.isNative) {
                    NativeBridgeAndroid_1.default.showBannerAd(false);
                }
                this.btn_pauseOrStart.skin = "map/btn_pause.png";
                this.hidePopUp();
                if (this._gameState != GameState.Pause && this._gameState != GameState.EffectPause) {
                    var bool = void 0;
                    try {
                        bool = this.restoreAll();
                    }
                    catch (_a) {
                        localStorage.setItem("CacheData_1", null);
                        bool = false;
                    }
                    if (!bool) {
                        this._score = 0;
                        for (var i = 0; i < this.list_grids.repeatX; i++) {
                            for (var j = 0; j < this.list_grids.repeatY; j++) {
                                if (this._fonts[i] == null) {
                                    this._fonts[i] = [];
                                }
                                if (this._debugMode) {
                                    var txt = this._debugFonts[i + j * 5];
                                    if (txt == null) {
                                        this._fonts[i][j] = null;
                                    }
                                    else {
                                        var tempFontInfo = MapFontInfo_1.default.create({ text: txt });
                                        tempFontInfo.x = i;
                                        tempFontInfo.y = j;
                                        this._fonts[i][j] = tempFontInfo;
                                    }
                                }
                                else {
                                    this._fonts[i][j] = null;
                                }
                            }
                        }
                        this._words = [];
                        this._popularGroup = null;
                        this._sysDispelFontInfoStack = [];
                        this._sysDropingFontInfos = [];
                        this._splitFontWords = [];
                        this._splitGroupWords = [];
                        this._dropingFontInfo = null;
                        this._nextDropingFontInfo = null;
                        this.heCiSplitTimes = 0; //合成当前左边词组失败次数
                        this.heCizuRate = 10; //出现左边那个词组的概率
                        this.hanZiRate = 10; // 出现能跟五列最外边汉字合成汉字的概率
                        this.ciZuRate = 10; // 出现能跟五列最外边汉字合成词组的概率
                        this._myPlayerInfo.wannengUseTimes = 3;
                        this._myPlayerInfo.guideUseTimes = 3;
                        this.refresh();
                        this.renderGridList();
                    }
                }
                break;
            case GameState.Pause:
                this.btn_pauseOrStart.skin = "map/btn_start.png";
                break;
            case GameState.EffectPause:
                break;
            case GameState.init:
                this.showStartGame();
                if (AppConfig_1.default.isNative) {
                    NativeBridgeAndroid_1.default.showBannerAd(true);
                }
                break;
        }
        this._gameState = gameState;
        if (nextState != -1) {
            this.changeGameStatue(nextState);
        }
    };
    MainGameScene.prototype.onGridRender = function (cell, index) {
        var data = cell.dataSource;
        var fontGridScrip = cell.getComponent(FontGrid_1.default);
        if (data == null) {
            fontGridScrip.font = null;
            fontGridScrip.clearEffects();
        }
        else {
            fontGridScrip.font = data.text;
            fontGridScrip.addEffect(data.getStuntFontEffect());
            fontGridScrip.quality = data.quality;
        }
    };
    MainGameScene.prototype.onStarRender = function (cell, index) {
        var isShine = cell.dataSource; // 是否点亮
        if (isShine) {
            cell.skin = "map/img_star.png";
        }
        else {
            cell.skin = "map/img_starBg.png";
        }
    };
    MainGameScene.prototype.onMouseDown = function () {
        if (this._gameState == GameState.Playing) {
            this._mouseDownPoint = new Laya.Point(Laya.stage.mouseX, Laya.stage.mouseY);
            this._isQuickDrop = false;
        }
    };
    MainGameScene.prototype.onMouseUp = function () {
        if (this._gameState == GameState.Playing) {
            if (this._mouseDownPoint == null) {
                return;
            }
            var absX = Math.abs(Laya.stage.mouseX - this._mouseDownPoint.x);
            var absY = Laya.stage.mouseY - this._mouseDownPoint.y;
            if (absX > 10) {
                if (absY > absX * 2.5) {
                    //竖着移动
                    this._isQuickDrop = true;
                    SoundTool_1.default.playXiaHuaEffect();
                }
                else {
                    this.moveDropingFont(Laya.stage.mouseX < this._mouseDownPoint.x);
                    SoundTool_1.default.playYiDongEffect();
                }
            }
            else if (absY > 25) {
                this._isQuickDrop = true;
                SoundTool_1.default.playXiaHuaEffect();
            }
            this._mouseDownPoint = null;
        }
    };
    MainGameScene.prototype.onEnable = function () {
    };
    MainGameScene.prototype.onDisable = function () {
        if (this._gameState == GameState.Playing)
            this.changeGameStatue(GameState.Pause);
    };
    MainGameScene.prototype.getGuideSpeedRate = function () {
        var sppedrate = 100;
        if (!AppConfig_1.default.hadGuidance()) {
            if (this._score < 2000) {
                sppedrate = 120;
            }
            else if (this._score < 10000) {
                sppedrate = 110;
            }
        }
        return sppedrate;
    };
    MainGameScene.prototype.onUpdate = function () {
        var _this = this;
        if (this._gameState == GameState.Playing) {
            //判断当前字符是否不足
            var isEditList_1 = false;
            this.updatePopularGroup();
            //消除产生的漂浮字移动及消除
            if (this._sysDropingFontInfos.length > 0) {
                if (this._sysTickTime > 0) {
                    this._sysTickTime--;
                }
                else {
                    this._sysTickTime = this._maxSysTickTime;
                    var sysDelArr = [];
                    if (this._sysDropingFontInfos.length == this._sysDispelFontInfoStack.length) {
                        this._sysDropingFontInfos = [];
                        if (!this.invokeStuntFont()) {
                            this.dispelCiZu(this._sysDispelFontInfoStack);
                            this._sysDispelFontInfoStack.forEach(function (element) {
                                if (_this.getFontInfo(element.x, element.y) != element) {
                                    return;
                                }
                                _this.dispel(element.x, element.y);
                            });
                            this.checkSysDropFonts();
                            this._sysDispelFontInfoStack = [];
                        }
                    }
                    else {
                        isEditList_1 = true;
                        this._sysDropingFontInfos.forEach(function (element) {
                            if (_this._sysDispelFontInfoStack.indexOf(element) != -1) {
                                return;
                            }
                            if (_this._fonts[element.x][element.y + 1] == null && element.y + 1 < _this.list_grids.repeatY) {
                                //继续下落
                                _this.changeDropFontTo(element.x, element.y + 1, element);
                            }
                            else {
                                //无法下落，执行消除动作
                                _this._sysDispelFontInfoStack.push(element);
                                isEditList_1 = true;
                            }
                        });
                    }
                }
            }
            else {
                //方块状态检测
                if (this._tickTime > 0) {
                    if (this._isQuickDrop && this._tickTime > 1)
                        this._tickTime = 1;
                    this._tickTime--;
                }
                else {
                    this._tickTime = (100 - this._myPlayerInfo.getStarInfo(this._score).speed_rate) * this._maxTickTime / 100 * this.getGuideSpeedRate() / 100;
                    //判断是否有掉落中的字，没有的话，生成字
                    if (this._dropingFontInfo == null) {
                        this._isQuickDrop = false;
                        if (this._fonts[this._startPoint.x][this._startPoint.y] != null) {
                            //游戏结束
                            if (this._score > 6000) {
                                AppConfig_1.default.setGuidance(true);
                            }
                            this.changeGameStatue(GameState.End);
                            return;
                        }
                        else {
                            if (this._nextDropingFontInfo == null) {
                                this.randomNextFont();
                            }
                            if (this._nextDropingFontInfo.text == "*") {
                                this._dropingFontInfo = MapFontInfo_1.default.create({ text: "*" });
                                this._dropingFontInfo.isStuntFont = false;
                            }
                            else {
                                this._dropingFontInfo = MapFontInfo_1.default.create({ id: this._nextDropingFontInfo.id });
                                this._dropingFontInfo.isStuntFont = this._nextDropingFontInfo.isStuntFont;
                            }
                            // console.log("正在掉落的汉子：");
                            // console.log(this._dropingFontInfo.text);
                            this.guideToGrid();
                            this.setDispelText(this._dropingFontInfo.text);
                            this.randomNextFont();
                            this.updateNextDropingFont();
                            this._dropingFontInfo.x = this._startPoint.x;
                            this._dropingFontInfo.y = this._startPoint.y;
                            this._fonts[this._dropingFontInfo.x][this._dropingFontInfo.y] = this._dropingFontInfo;
                            isEditList_1 = true;
                            this.cacheAll();
                        }
                    }
                    else {
                        if (this._isQuickDrop)
                            this._tickTime = 1;
                        if (this._dropingFontInfo != null) {
                            if (this._fonts[this._dropingFontInfo.x][this._dropingFontInfo.y + 1] == null && this._dropingFontInfo.y + 1 < this.list_grids.repeatY) {
                                //继续下落
                                this.changeDropFontTo(this._dropingFontInfo.x, this._dropingFontInfo.y + 1, this._dropingFontInfo);
                            }
                            else {
                                //无法下落，执行消除动作
                                this._mouseDownPoint = null;
                                this.destroyGuideImgs();
                                var isDispel = false;
                                var cout = void 0;
                                cout = this.dispelCiZu([this._dropingFontInfo]);
                                if (cout == true) {
                                    isDispel = true;
                                }
                                cout = this.dispel(this._dropingFontInfo.x, this._dropingFontInfo.y);
                                if (cout == true) {
                                    isDispel = true;
                                }
                                // if(isDispel == false)
                                // {
                                //     this.setDispelText(this._dropingFontInfo.text);
                                // }
                                this._dropingFontInfo = null;
                            }
                            isEditList_1 = true;
                        }
                    }
                }
            }
            if (isEditList_1) {
                this.renderGridList();
            }
        }
    };
    /**
     * 获取所有非空顶字符
     */
    MainGameScene.prototype.getAllFonts = function () {
        var cout = [];
        for (var i = 0; i < this._fonts.length; i++) {
            for (var j = this._fonts[0].length - 1; j >= 0; j--) {
                if (this._fonts[i][j] != null) {
                    cout.push(this._fonts[i][j]);
                }
            }
        }
        return cout;
    };
    MainGameScene.prototype.cacheAll = function () {
        var _this = this;
        var obj = {};
        this._cacheProperties.forEach(function (element) {
            obj[element] = _this[element];
        });
        obj.guideRemainTimes = this._myPlayerInfo.guideRemainTimes;
        obj.guideUseTimes = this._myPlayerInfo.guideUseTimes;
        obj.wannengUseTimes = this._myPlayerInfo.wannengUseTimes;
        obj._wordTexts = [];
        this._words.forEach(function (element) {
            obj._wordTexts.push({ text: element.text, isStuntFont: element.isStuntFont });
        });
        obj._splitFontWordTexts = [];
        this._splitFontWords.forEach(function (element) {
            obj._splitFontWordTexts.push({ text: element.text, isStuntFont: element.isStuntFont });
        });
        obj._splitGroupWordTexts = [];
        this._splitGroupWords.forEach(function (element) {
            obj._splitGroupWordTexts.push({ text: element.text, isStuntFont: element.isStuntFont });
        });
        if (this._dropingFontInfo != null)
            obj._dropingFontInfoText = { text: this._dropingFontInfo.text, isStuntFont: this._dropingFontInfo.isStuntFont };
        if (this._nextDropingFontInfo != null)
            obj._nextDropingFontInfoText = { text: this._nextDropingFontInfo.text, isStuntFont: this._nextDropingFontInfo.isStuntFont };
        obj._sysDispelFontInfoStackPoses = [];
        this._sysDispelFontInfoStack.forEach(function (element) {
            obj._sysDispelFontInfoStackPoses.push(new Laya.Point(element.x, element.y));
        });
        obj._sysDropingFontInfosPoses = [];
        this._sysDropingFontInfos.forEach(function (element) {
            obj._sysDropingFontInfosPoses.push(new Laya.Point(element.x, element.y));
        });
        obj._fontTexts = [];
        for (var i = 0; i < this._fonts.length; i++) {
            obj._fontTexts[i] = [];
            for (var j = 0; j < this._fonts[i].length; j++) {
                if (this._fonts[i][j] == null) {
                    obj._fontTexts[i][j] = null;
                }
                else {
                    obj._fontTexts[i][j] = { text: this._fonts[i][j].text, isStuntFont: this._fonts[i][j].isStuntFont };
                }
            }
        }
        localStorage.setItem("StorageVersion", AppConfig_1.default.version);
        localStorage.setItem("CacheData_1", JSON.stringify(obj));
    };
    MainGameScene.prototype.restoreAll = function () {
        var _this = this;
        if (this._debugMode) {
            return false;
        }
        var storageVersion = localStorage.getItem("StorageVersion");
        if (storageVersion == AppConfig_1.default.version) {
            var dataStr = localStorage.getItem("CacheData_1");
            if (dataStr == null) {
                return false;
            }
            try {
                var restoreObj_1 = JSON.parse(dataStr);
                var tempFontInfo_1;
                this._fonts = [];
                for (var i = 0; i < this.list_grids.repeatX; i++) {
                    this._fonts[i] = [];
                    for (var j = 0; j < this.list_grids.repeatY; j++) {
                        if (restoreObj_1._fontTexts[i] == null || restoreObj_1._fontTexts[i][j] == null) {
                            this._fonts[i][j] = null;
                        }
                        else {
                            tempFontInfo_1 = this._fonts[i][j] = MapFontInfo_1.default.create({ text: restoreObj_1._fontTexts[i][j].text });
                            tempFontInfo_1.isStuntFont = restoreObj_1._fontTexts[i][j].isStuntFont;
                            tempFontInfo_1.x = i;
                            tempFontInfo_1.y = j;
                        }
                    }
                }
                this._cacheProperties.forEach(function (element) {
                    _this[element] = restoreObj_1[element];
                });
                this._words = [];
                restoreObj_1._wordTexts.forEach(function (element) {
                    tempFontInfo_1 = MapFontInfo_1.default.create({ text: element.text });
                    if (tempFontInfo_1.text == null)
                        return;
                    tempFontInfo_1.isStuntFont = element.isStuntFont;
                    _this._words.push(tempFontInfo_1);
                });
                this._splitFontWords = [];
                restoreObj_1._splitFontWordTexts.forEach(function (element) {
                    tempFontInfo_1 = MapFontInfo_1.default.create({ text: element.text });
                    if (tempFontInfo_1.text == null)
                        return;
                    tempFontInfo_1.isStuntFont = element.isStuntFont;
                    _this._splitFontWords.push(tempFontInfo_1);
                });
                this._myPlayerInfo.wannengUseTimes = restoreObj_1.wannengUseTimes;
                this._myPlayerInfo.guideRemainTimes = restoreObj_1.guideRemainTimes;
                this._myPlayerInfo.guideUseTimes = restoreObj_1.guideUseTimes;
                this._splitGroupWords = [];
                restoreObj_1._splitGroupWordTexts.forEach(function (element) {
                    tempFontInfo_1 = MapFontInfo_1.default.create({ text: element.text });
                    if (tempFontInfo_1.text == null)
                        return;
                    tempFontInfo_1.isStuntFont = element.isStuntFont;
                    _this._splitGroupWords.push(tempFontInfo_1);
                });
                if (restoreObj_1._dropingFontInfoText != null) {
                    this._dropingFontInfo = MapFontInfo_1.default.create({ text: restoreObj_1._dropingFontInfoText.text });
                    if (this._dropingFontInfo.text == null) {
                        return false;
                    }
                    this._dropingFontInfo.isStuntFont = restoreObj_1._dropingFontInfoText.isStuntFont;
                    this.setDispelText(this._dropingFontInfo.text);
                    this._dropingFontInfo.x = this._startPoint.x;
                    this._dropingFontInfo.y = this._startPoint.y;
                }
                else {
                    this.randomNextFont();
                    this._dropingFontInfo = this._nextDropingFontInfo;
                    this._nextDropingFontInfo = null;
                }
                if (restoreObj_1._nextDropingFontInfoText != null)
                    this._nextDropingFontInfo = MapFontInfo_1.default.create({ text: restoreObj_1._nextDropingFontInfoText.text });
                if (this._nextDropingFontInfo == null || this._nextDropingFontInfo.text == null) {
                    this.randomNextFont();
                }
                else {
                    this._nextDropingFontInfo.isStuntFont = restoreObj_1._nextDropingFontInfoText.isStuntFont;
                }
                this._sysDispelFontInfoStack = [];
                restoreObj_1._sysDispelFontInfoStackPoses.forEach(function (element) {
                    tempFontInfo_1 = _this.getFontInfo(element.x, element.y);
                    if (tempFontInfo_1 != null) {
                        _this._sysDispelFontInfoStack.push(tempFontInfo_1);
                    }
                });
                this._sysDropingFontInfos = [];
                restoreObj_1._sysDropingFontInfosPoses.forEach(function (element) {
                    tempFontInfo_1 = _this.getFontInfo(element.x, element.y);
                    if (tempFontInfo_1 != null) {
                        _this._sysDropingFontInfos.push(tempFontInfo_1);
                    }
                });
                this._tickTime = (100 - this._myPlayerInfo.getStarInfo(this._score).speed_rate) * this._maxTickTime / 100;
                this.renderGridList();
                this.refresh();
                return true;
            }
            catch (error) {
                localStorage.setItem("CacheData_1", null);
                return false;
            }
        }
        return false;
    };
    MainGameScene.prototype.moveDropingFont = function (left) {
        if (this._dropingFontInfo == null) {
            return;
        }
        var minTickTime = 0.3 * (100 - this._myPlayerInfo.getStarInfo(this._score).speed_rate) * this._maxTickTime / 100;
        if (left) {
            if (this._dropingFontInfo.x > 0 && this._fonts[this._dropingFontInfo.x - 1][this._dropingFontInfo.y] == null) {
                this.changeDropFontTo(this._dropingFontInfo.x - 1, this._dropingFontInfo.y);
                this._tickTime = this._tickTime > minTickTime ? this._tickTime : minTickTime;
            }
        }
        else {
            if (this._dropingFontInfo.x < this.list_grids.repeatX - 1 && this._fonts[this._dropingFontInfo.x + 1][this._dropingFontInfo.y] == null) {
                this.changeDropFontTo(this._dropingFontInfo.x + 1, this._dropingFontInfo.y);
                this._tickTime = this._tickTime > minTickTime ? this._tickTime : minTickTime;
            }
        }
        // let targetMc = this.list_grids.getCell(this._dropingFontInfo.y * this.list_grids.repeatX + this._dropingFontInfo.x);
        // let itemWidth = targetMc.width;
        // let point = new Laya.Point(targetMc.x + targetMc.width / 2, targetMc.y + targetMc.height / 2);
        // point = (targetMc.parent as Laya.Sprite).localToGlobal(point);
        // //判断下移到底
        // if(Math.abs(point.x - Laya.stage.mouseX) < itemWidth / 2)
        // {
        //     if(Laya.stage.mouseY - point.y > itemWidth / 2)
        //     {
        //         //移动到底
        //         this._isQuickDrop = true;
        //         // while(this._fonts[this._dropingFontInfo.x][this._dropingFontInfo.y + 1] == null && this._dropingFontInfo.y + 1 < this.list_grids.repeatY)
        //         // {
        //         //     this.changeDropFontTo(this._dropingFontInfo.x, this._dropingFontInfo.y + 1)
        //         // }
        //     }
        // }
        // else 
        // {
        //     if(Laya.stage.mouseX < point.x)
        //     {
        //         //向左移动
        //         if(this._dropingFontInfo.x > 0 && this._fonts[this._dropingFontInfo.x - 1][this._dropingFontInfo.y]  == null)
        //         {
        //             this.changeDropFontTo(this._dropingFontInfo.x - 1, this._dropingFontInfo.y);
        //         }
        //     }
        //     else 
        //     {
        //         //向右一定
        //         if(this._dropingFontInfo.x < this.list_grids.repeatX - 1 && this._fonts[this._dropingFontInfo.x + 1][this._dropingFontInfo.y]  == null)
        //         {
        //             this.changeDropFontTo(this._dropingFontInfo.x + 1, this._dropingFontInfo.y);
        //         }
        //     }
        // }
        // if(isRefreshList)
        // {
        this.renderGridList();
        // }
    };
    //检查消除产生的漂浮字加入列表
    MainGameScene.prototype.checkSysDropFonts = function () {
        for (var i = 0; i < this.list_grids.repeatX; i++) {
            var isAdd = false;
            for (var j = this.list_grids.repeatY - 1; j >= 0; j--) {
                if (this._fonts[i][j] != null && (isAdd || (j + 1 < this.list_grids.repeatY && this._fonts[i][j + 1] == null))) {
                    isAdd = true;
                    if (this._sysDropingFontInfos.indexOf(this._fonts[i][j]) == -1)
                        this._sysDropingFontInfos.push(this._fonts[i][j]);
                }
            }
        }
    };
    //移动正在操作的字
    MainGameScene.prototype.changeDropFontTo = function (x, y, fontInfo) {
        if (fontInfo === void 0) { fontInfo = null; }
        if (y < 0 || x < 0) {
            return;
        }
        if (x >= this.list_grids.repeatX || y >= this.list_grids.repeatY) {
            return;
        }
        if (fontInfo == null) {
            fontInfo = this._dropingFontInfo;
        }
        this._fonts[fontInfo.x][fontInfo.y] = null;
        fontInfo.x = x;
        fontInfo.y = y;
        this._fonts[fontInfo.x][fontInfo.y] = fontInfo;
    };
    //更新文字列表
    MainGameScene.prototype.renderGridList = function () {
        var arr = [];
        for (var j = 0; j < this.list_grids.repeatY; j++) {
            for (var i = 0; i < this.list_grids.repeatX; i++) {
                arr.push(this._fonts[i][j]);
            }
        }
        this.list_grids.dataSource = arr;
    };
    /**
     * 消除汉子
     * @param x x坐标或者mapfontinfo
     * @param y y坐标
     * @param stuntCheck 是否执行技能 默认true
     * @param isHeChengHanZi  是否是合成汉子时候的消除 默认true
     */
    MainGameScene.prototype.dispelFont = function (x, y) {
        if (y === void 0) { y = 0; }
        var dispelFontInfo;
        var indX;
        var indY;
        if (x instanceof MapFontInfo_1.default) {
            dispelFontInfo = x;
            this._fonts[x.x][x.y] = null;
            indX = x.x;
            indY = x.y;
        }
        else {
            dispelFontInfo = this.getFontInfo(x, y);
            if (dispelFontInfo != null)
                this._fonts[x][y] = null;
            indX = x;
            indY = y;
        }
        if (dispelFontInfo != null) {
            var sysInd = this._sysDropingFontInfos.indexOf(dispelFontInfo);
            if (sysInd != -1) {
                this._sysDropingFontInfos.splice(sysInd, 1);
            }
            sysInd = this._sysDispelFontInfoStack.indexOf(dispelFontInfo);
            if (sysInd != -1) {
                this._sysDispelFontInfoStack.splice(sysInd, 1);
            }
            dispelFontInfo.destroyStuntEffect();
        }
    };
    /**
     * 触发技能汉子效果
     */
    MainGameScene.prototype.invokeStuntFont = function () {
        var _this = this;
        var points1 = [];
        var points2 = [];
        var score = 0;
        var tempFontInfo;
        var effectObj = {};
        var pushArrFun = function (x, y, arr) {
            if (effectObj[x + "_" + y] == null) {
                arr.push(new Laya.Point(x, y));
                effectObj[x + "_" + y] = true;
            }
        };
        this._stuntFontsCheckArr1.forEach(function (element) {
            //消除技能格子四周
            if (element.fontInfo != _this.getFontInfo(element.fontInfo.x, element.fontInfo.y)) {
                //技能汉字已经被消除不触发技能
                return;
            }
            pushArrFun(element.fontInfo.x - 1, element.fontInfo.y, points1);
            pushArrFun(element.fontInfo.x + 1, element.fontInfo.y, points1);
            pushArrFun(element.fontInfo.x, element.fontInfo.y - 1, points1);
            pushArrFun(element.fontInfo.x, element.fontInfo.y + 1, points1);
            //消除包含当前字的所有汉子格子
            for (var i = 0; i < _this._fonts.length; i++) {
                for (var j = 0; j < _this._fonts[i].length; j++) {
                    tempFontInfo = _this._fonts[i][j];
                    if (tempFontInfo != null) {
                        if (tempFontInfo.getStructInfos(element.id, false).length > 0) {
                            score += 10;
                            pushArrFun(tempFontInfo.x, tempFontInfo.y, points2);
                        }
                    }
                }
            }
        });
        this._stuntFontsCheckArr2.forEach(function (element) {
            //消除包含当前字的所有汉子格子
            for (var i = 0; i < _this._fonts.length; i++) {
                for (var j = 0; j < _this._fonts[i].length; j++) {
                    tempFontInfo = _this._fonts[i][j];
                    if (tempFontInfo != null) {
                        if (tempFontInfo.getStructInfos(element.id, false).length > 0) {
                            score += 10;
                            pushArrFun(tempFontInfo.x, tempFontInfo.y, points2);
                        }
                    }
                }
            }
        });
        var timeToUpdate;
        if (points1.length > 0) {
            this.playEffectInc();
            timeToUpdate = 700;
            points1.forEach(function (element2) {
                tempFontInfo = _this.getFontInfo(element2.x, element2.y);
                if (tempFontInfo != null) {
                    score += 10;
                    _this.dispelFont(tempFontInfo);
                }
                var tempFontScript = _this.getFontScript(element2.x, element2.y);
                if (tempFontScript != null)
                    tempFontScript.playHeChengEffect();
            });
            Laya.timer.once(500, this, function () {
                var _this = this;
                points1.forEach(function (element3) {
                    var tempFontScript = _this.getFontScript(element3.x, element3.y);
                    if (tempFontScript != null) {
                        tempFontScript.font = null;
                        tempFontScript.clearEffects();
                        tempFontScript.onUpdate();
                    }
                });
            });
            Laya.timer.once(700, this, function () {
                this.renderGridList();
                this.updateScore();
                this.setStar(this._myPlayerInfo.getStarInfo(this._score).star_num);
            });
            Laya.timer.once(850, this, function () {
                this.endEffectInc();
            });
        }
        if (points2.length > 0) {
            this.playEffectInc();
            timeToUpdate = 1000;
            Laya.timer.once(300, this, function () {
                var _this = this;
                points2.forEach(function (element2) {
                    tempFontInfo = _this.getFontInfo(element2.x, element2.y);
                    if (tempFontInfo != null) {
                        _this.dispelFont(tempFontInfo);
                    }
                    var tempFontScript = _this.getFontScript(element2.x, element2.y);
                    if (tempFontScript != null)
                        tempFontScript.playHeChengEffect();
                });
            });
            Laya.timer.once(800, this, function () {
                var _this = this;
                points2.forEach(function (element3) {
                    var tempFontScript = _this.getFontScript(element3.x, element3.y);
                    if (tempFontScript != null) {
                        tempFontScript.font = null;
                        tempFontScript.clearEffects();
                        tempFontScript.onUpdate();
                    }
                });
            });
            Laya.timer.once(1150, this, function () {
                this.endEffectInc();
            });
        }
        this._score += score;
        if (timeToUpdate > 0) {
            Laya.timer.once(timeToUpdate, this, function () {
                this.renderGridList();
                this.updateScore();
                this.setStar(this._myPlayerInfo.getStarInfo(this._score).star_num);
            });
        }
        this._stuntFontsCheckArr1 = [];
        this._stuntFontsCheckArr2 = [];
        return points1.length > 0 || points2.length > 0;
    };
    /**
     * 消除词组
     * @param changeFontInfos 有变更的汉子列表
     */
    MainGameScene.prototype.dispelCiZu = function (changeFontInfos) {
        var _this = this;
        var checkFontTxts = []; //当前所有汉子列表
        for (var j = 0; j < this.list_grids.repeatY; j++) {
            for (var i = 0; i < this.list_grids.repeatX; i++) {
                var tempFontInfo = this.getFontInfo(i, j);
                if (tempFontInfo != null) {
                    var txt = tempFontInfo.text;
                    if (checkFontTxts.indexOf(txt) == -1) {
                        checkFontTxts.push(txt);
                    }
                }
            }
        }
        var checkArr = []; //查找所有屏幕上所有字的词典，找出可能的组合列表
        checkFontTxts.forEach(function (element1) {
            var tempArr = MapFontInfo_1.default.getGroup(element1);
            tempArr.forEach(function (element2) {
                if (checkArr.indexOf(element2) != -1) {
                    return;
                }
                var chars = element2.split("");
                var isFix = true;
                for (var i = 0; i < chars.length; i++) {
                    if (checkFontTxts.indexOf(chars[i]) == -1) {
                        isFix = false;
                        break;
                    }
                }
                if (isFix) {
                    if (element2 == _this._popularGroup) {
                        checkArr.unshift(element2);
                    }
                    else {
                        checkArr.push(element2);
                    }
                }
            });
        });
        //遍历变更列表，寻找可消除的词组并执行消除
        var isDispel = false;
        changeFontInfos.forEach(function (element) {
            if (_this.getFontInfo(element.x, element.y) != element) {
                return;
            }
            var cout = _this.dispelCiZuItem(element.x, element.y, checkArr);
            if (cout == true) {
                isDispel = true;
            }
        });
        return isDispel;
    };
    MainGameScene.prototype.dispelCiZuItem = function (x, y, checkArr) {
        var _this = this;
        var root = this.getFontInfo(x, y);
        if (root == null) {
            return;
        }
        var _loop_1 = function (i) {
            var group = checkArr[i];
            if (group.indexOf(root.text) == -1) {
                return "continue";
            }
            this_1._checkChars = group.split("");
            var aStarInfo = this_1.dispelCiZuItemSure(x, y, null);
            if (aStarInfo != null) {
                //消除词组
                SoundTool_1.default.playXiaoChuEffect();
                this_1.playEffectInc();
                if (group == this_1._popularGroup) {
                    this_1._popularGroup = null;
                }
                // console.log("消除词组：=============================")
                // console.log("词组：" + group)
                var score = 40;
                var points_1 = aStarInfo.getSureList();
                var time_1 = 0;
                var ciZuObj_1 = {};
                points_1.forEach(function (element) {
                    ciZuObj_1[element.x + "_" + element.y] = true;
                    var tempFontScript = _this.getFontScript(element.x, element.y);
                    tempFontScript.playHeChengEffect();
                    var tempFont = _this.getFontInfo(element.x, element.y);
                    if (tempFont != null) {
                        // console.log("point : ("+tempFont.x+","+tempFont.y+","+tempFont.text+")");
                        _this.dispelFont(tempFont);
                        if (tempFont.isStuntFont) {
                            _this._stuntFontsCheckArr2.push({ fontInfo: tempFont, id: tempFont.id });
                        }
                        time_1++;
                    }
                });
                points_1.forEach(function (element) {
                    var tempFont = _this.getFontInfo(element.x - 1, element.y);
                    if (tempFont != null) {
                        _this.dispelFont(tempFont);
                        if (tempFont.isStuntFont) {
                            _this._stuntFontsCheckArr2.push({ fontInfo: tempFont, id: tempFont.id });
                        }
                        time_1++;
                    }
                    tempFont = _this.getFontInfo(element.x + 1, element.y);
                    if (tempFont != null) {
                        _this.dispelFont(tempFont);
                        if (tempFont.isStuntFont) {
                            _this._stuntFontsCheckArr2.push({ fontInfo: tempFont, id: tempFont.id });
                        }
                        time_1++;
                    }
                    tempFont = _this.getFontInfo(element.x, element.y - 1);
                    if (tempFont != null) {
                        _this.dispelFont(tempFont);
                        if (tempFont.isStuntFont) {
                            _this._stuntFontsCheckArr2.push({ fontInfo: tempFont, id: tempFont.id });
                        }
                        time_1++;
                    }
                    tempFont = _this.getFontInfo(element.x, element.y + 1);
                    if (tempFont != null) {
                        _this.dispelFont(tempFont);
                        if (tempFont.isStuntFont) {
                            _this._stuntFontsCheckArr2.push({ fontInfo: tempFont, id: tempFont.id });
                        }
                        time_1++;
                    }
                });
                score += (time_1 * 10);
                this_1._score += score;
                Laya.timer.once(500, this_1, function () {
                    var _this = this;
                    points_1.forEach(function (element) {
                        var tempFontScript = _this.getFontScript(element.x, element.y);
                        tempFontScript.font = null;
                        tempFontScript.clearEffects();
                        tempFontScript.onUpdate();
                    });
                });
                Laya.timer.once(200, this_1, function () {
                    var _this = this;
                    points_1.forEach(function (element) {
                        var tempFontScript;
                        var tempX = element.x - 1;
                        var tempY = element.y;
                        if (ciZuObj_1[tempX + "_" + tempY] != true) {
                            tempFontScript = _this.getFontScript(tempX, tempY);
                            if (tempFontScript != null) {
                                tempFontScript.playHeChengEffect();
                            }
                        }
                        tempX = element.x + 1;
                        tempY = element.y;
                        if (ciZuObj_1[tempX + "_" + tempY] != true) {
                            tempFontScript = _this.getFontScript(tempX, tempY);
                            if (tempFontScript != null) {
                                tempFontScript.playHeChengEffect();
                            }
                        }
                        tempX = element.x;
                        tempY = element.y - 1;
                        if (ciZuObj_1[tempX + "_" + tempY] != true) {
                            tempFontScript = _this.getFontScript(tempX, tempY);
                            if (tempFontScript != null) {
                                tempFontScript.playHeChengEffect();
                            }
                        }
                        tempX = element.x;
                        tempY = element.y + 1;
                        if (ciZuObj_1[tempX + "_" + tempY] != true) {
                            tempFontScript = _this.getFontScript(tempX, tempY);
                            if (tempFontScript != null) {
                                tempFontScript.playHeChengEffect();
                            }
                        }
                    });
                });
                Laya.timer.once(1100, this_1, function () {
                    this.setDispelText(group);
                    this.renderGridList();
                    this.updateScore();
                    this.setStar(this._myPlayerInfo.getStarInfo(this._score).star_num);
                });
                Laya.timer.once(1400, this_1, function () {
                    this.endEffectInc();
                });
                return { value: true };
            }
        };
        var this_1 = this;
        for (var i = 0; i < checkArr.length; i++) {
            var state_1 = _loop_1(i);
            if (typeof state_1 === "object")
                return state_1.value;
        }
        return false;
    };
    MainGameScene.prototype.dispelCiZuItemSure = function (x, y, parentAStarInfo) {
        var currentFontInfo = this.getFontInfo(x, y);
        if (currentFontInfo == null) {
            return null;
        }
        var chars = parentAStarInfo == null ? this._checkChars.concat() : parentAStarInfo.chars.concat();
        if (chars.indexOf(currentFontInfo.text) == -1) {
            return null;
        }
        var aStarInfo = new SearchInfo();
        aStarInfo.currentPoint.x = x;
        aStarInfo.currentPoint.y = y;
        aStarInfo.setOpenList(parentAStarInfo == null ? [] : parentAStarInfo.getOpenList().concat());
        aStarInfo.setSureList(parentAStarInfo == null ? [] : parentAStarInfo.getSureList().concat());
        aStarInfo.open(x, y, false);
        aStarInfo.sure(x, y);
        aStarInfo.chars = chars;
        aStarInfo.chars.splice(aStarInfo.chars.indexOf(currentFontInfo.text), 1);
        if (aStarInfo.chars.length == 0) {
            return aStarInfo;
        }
        if (!aStarInfo.isOpen(x - 1, y) && !aStarInfo.isSure(x - 1, y)) {
            aStarInfo.open(x - 1, y);
        }
        if (!aStarInfo.isOpen(x + 1, y) && !aStarInfo.isSure(x + 1, y)) {
            aStarInfo.open(x + 1, y);
        }
        if (!aStarInfo.isOpen(x, y - 1) && !aStarInfo.isSure(x, y - 1)) {
            aStarInfo.open(x, y - 1);
        }
        if (!aStarInfo.isOpen(x, y + 1) && !aStarInfo.isSure(x, y + 1)) {
            aStarInfo.open(x, y + 1);
        }
        var openList = aStarInfo.getOpenList();
        for (var i = 0; i < openList.length; i++) {
            var element = openList[i];
            var cout = this.dispelCiZuItemSure(element.x, element.y, aStarInfo);
            if (cout != null) {
                return cout;
            }
        }
        return null;
    };
    MainGameScene.prototype.dispelStar = function (x, y) {
        var _this = this;
        //消除*
        SoundTool_1.default.playXiaoChuEffect();
        this.playEffectInc();
        var score = 40;
        var points = [{ x: x, y: y }];
        var time = 0;
        var cout = points.concat();
        points.forEach(function (element) {
            var tempFont = _this.getFontInfo(element.x - 1, element.y);
            var tempFontGrid = _this.getFontScript(element.x - 1, element.y);
            if (tempFont != null) {
                _this.dispelFont(tempFont);
                if (tempFontGrid) {
                    tempFontGrid.playHeChengEffect();
                }
                if (tempFont.isStuntFont) {
                    _this._stuntFontsCheckArr2.push({ fontInfo: tempFont, id: tempFont.id });
                }
                time++;
            }
            tempFont = _this.getFontInfo(element.x + 1, element.y);
            tempFontGrid = _this.getFontScript(element.x + 1, element.y);
            if (tempFont != null) {
                _this.dispelFont(tempFont);
                if (tempFontGrid) {
                    tempFontGrid.playHeChengEffect();
                }
                if (tempFont.isStuntFont) {
                    _this._stuntFontsCheckArr2.push({ fontInfo: tempFont, id: tempFont.id });
                }
                time++;
            }
            tempFont = _this.getFontInfo(element.x, element.y - 1);
            tempFontGrid = _this.getFontScript(element.x, element.y - 1);
            if (tempFont != null) {
                _this.dispelFont(tempFont);
                if (tempFontGrid) {
                    tempFontGrid.playHeChengEffect();
                }
                if (tempFont.isStuntFont) {
                    _this._stuntFontsCheckArr2.push({ fontInfo: tempFont, id: tempFont.id });
                }
                time++;
            }
            tempFont = _this.getFontInfo(element.x, element.y + 1);
            tempFontGrid = _this.getFontScript(element.x, element.y + 1);
            if (tempFont != null) {
                _this.dispelFont(tempFont);
                if (tempFontGrid) {
                    tempFontGrid.playHeChengEffect();
                }
                if (tempFont.isStuntFont) {
                    _this._stuntFontsCheckArr2.push({ fontInfo: tempFont, id: tempFont.id });
                }
                time++;
            }
        });
        score += (time * 10);
        this._score += score;
        Laya.timer.once(500, this, function () {
            var _this = this;
            points.forEach(function (element) {
                var tempFontScript = _this.getFontScript(element.x, element.y);
                tempFontScript.font = null;
                tempFontScript.clearEffects();
                tempFontScript.onUpdate();
            });
        });
        Laya.timer.once(200, this, function () {
            var _this = this;
            points.forEach(function (element) {
                var tempFont = _this.getFontInfo(element.x, element.y);
                var tempFontGrid = _this.getFontScript(element.x, element.y);
                if (tempFont)
                    _this.dispelFont(tempFont);
                if (tempFontGrid) {
                    tempFontGrid.playHeChengEffect();
                }
            });
        });
        Laya.timer.once(1100, this, function () {
            this.setDispelText("*");
            this.renderGridList();
            this.updateScore();
            this.setStar(this._myPlayerInfo.getStarInfo(this._score).star_num);
        });
        Laya.timer.once(1400, this, function () {
            this.endEffectInc();
        });
    };
    /**
     * 消字
     * @param x
     * @param y
     */
    MainGameScene.prototype.dispel = function (x, y) {
        var targetFontInfo = this.getFontInfo(x, y);
        if (targetFontInfo == null)
            return false;
        if (targetFontInfo.text == "*") {
            this.dispelStar(x, y);
            return false;
        }
        var canHeChengFontInfos = targetFontInfo.canHeChengFontInfos;
        if (canHeChengFontInfos.length == 0)
            return false;
        var popularGroup = this._popularGroup;
        if (popularGroup != null) {
            canHeChengFontInfos.sort(function (a, b) {
                if (popularGroup.indexOf(a.text) != -1) {
                    return -1;
                }
                else if (popularGroup.indexOf(b.text) != -1) {
                    return 1;
                }
                else {
                    return 0;
                }
            });
        }
        //遍历变更列表，寻找可消除的词组并执行消除
        var hasHeCheng = false;
        for (var i = 0; i < canHeChengFontInfos.length; i++) {
            if (hasHeCheng) {
                break;
            }
            var tempFontInfo = canHeChengFontInfos[i];
            var structInfoList = tempFontInfo.structInfo.split(",");
            for (var j = 0; j < structInfoList.length; j++) {
                var structList = structInfoList[j].split("_");
                if (structList.length > 1 && structList.indexOf(targetFontInfo.id.toString()) != -1) {
                    var cout = this.dispelItem(targetFontInfo.x, targetFontInfo.y, structList, tempFontInfo.id);
                    if (cout) {
                        hasHeCheng = true;
                        break;
                    }
                }
            }
        }
        return hasHeCheng;
    };
    MainGameScene.prototype.dispelItem = function (x, y, checkArr, fontId) {
        var _this = this;
        var root = this.getFontInfo(x, y);
        if (root == null) {
            return;
        }
        this._checkIds = checkArr;
        var searchInfo = this.dispelItemSure(x, y, null);
        if (searchInfo != null) {
            //消除并合成汉子
            SoundTool_1.default.playHeChengEffect();
            this.playEffectInc();
            var maxQuality_1 = 0;
            var points = searchInfo.getSureList();
            points.forEach(function (element) {
                var tempFontGrid = _this.getFontScript(element.x, element.y);
                var tempFontInfo = _this.getFontInfo(element.x, element.y);
                if (maxQuality_1 < tempFontInfo.quality) {
                    maxQuality_1 = tempFontInfo.quality;
                }
                if (tempFontGrid != null) {
                    tempFontGrid.playHeChengEffect();
                    // console.log("消除格子: ("+element.x+","+element.y+")");
                }
            });
            var coutFontInfo_1 = MapFontInfo_1.default.create({ id: fontId });
            this.setDispelText(coutFontInfo_1.text);
            coutFontInfo_1.x = x;
            coutFontInfo_1.y = y;
            coutFontInfo_1.quality = maxQuality_1 + 1;
            var targetCell = this.getFontCell(x, y);
            var targetPoint_1 = new Laya.Point(targetCell.x, targetCell.y);
            Laya.timer.once(1100, this, function (par_points) {
                var _this = this;
                par_points.forEach(function (element) {
                    var tempFontInfo = _this.getFontInfo(element.x, element.y);
                    if (tempFontInfo == null)
                        return;
                    if (element.x != x || element.y != y) {
                        var moveStartCell = _this.getFontCell(element.x, element.y);
                        var moveStartFontGridScript = _this.getFontScript(element.x, element.y);
                        moveStartFontGridScript.font = null;
                        moveStartFontGridScript.clearEffects();
                        var moveCell = Laya.Pool.getItemByCreateFun("FontGrid", _this.prefab_fontGrid.create, _this.prefab_fontGrid);
                        moveCell["x"] = moveStartCell["x"];
                        moveCell["y"] = moveStartCell["y"];
                        var moveFontGridScript = moveCell.getComponent(FontGrid_1.default);
                        moveFontGridScript.font = tempFontInfo.text;
                        moveFontGridScript.addEffect(tempFontInfo.getStuntFontEffect());
                        moveFontGridScript.onUpdate();
                        _this.list_grids.addChild(moveCell);
                        Laya.Tween.to(moveCell, { x: targetPoint_1.x, y: targetPoint_1.y }, 100, null, Laya.Handler.create(_this, function (targetMc) {
                            targetMc.destroy(true);
                        }, [moveCell]));
                    }
                    _this.dispelFont(tempFontInfo);
                    if (tempFontInfo && tempFontInfo.isStuntFont) {
                        _this._stuntFontsCheckArr1.push({ fontInfo: coutFontInfo_1, id: tempFontInfo.id });
                    }
                });
            }, [points]);
            var score = 10;
            var time = points.length;
            score += 10 * time;
            this._score += score;
            ControllerMgr_1.default.getInstance(TipController_1.default).showLeftBottomTip("+" + score);
            Laya.timer.once(1200, this, function () {
                this._fonts[x][y] = coutFontInfo_1;
                var targetFontScript = this.getFontScript(x, y);
                targetFontScript.font = coutFontInfo_1.text;
                targetFontScript.addEffect(coutFontInfo_1.getStuntFontEffect());
                this.updateScore();
                this.setStar(this._myPlayerInfo.getStarInfo(this._score).star_num);
            });
            Laya.timer.once(1300, this, function () {
                this.endEffectInc();
            });
            // console.log("合成汉子：=============================");
            // console.log("("+coutFontInfo.x+","+coutFontInfo.y+","+coutFontInfo.text+")");
            this._sysDropingFontInfos.push(coutFontInfo_1);
            // console.log("======================================")
            return true;
        }
        return false;
    };
    MainGameScene.prototype.dispelItemSure = function (x, y, parentAStarInfo) {
        var currentFontInfo = this.getFontInfo(x, y);
        if (currentFontInfo == null) {
            return null;
        }
        var chars = parentAStarInfo == null ? this._checkIds.concat() : parentAStarInfo.chars.concat();
        if (chars.indexOf(currentFontInfo.id.toString()) == -1) {
            return null;
        }
        var aStarInfo = new SearchInfo();
        aStarInfo.currentPoint.x = x;
        aStarInfo.currentPoint.y = y;
        aStarInfo.setOpenList(parentAStarInfo == null ? [] : parentAStarInfo.getOpenList().concat());
        aStarInfo.setSureList(parentAStarInfo == null ? [] : parentAStarInfo.getSureList().concat());
        aStarInfo.open(x, y, false);
        aStarInfo.sure(x, y);
        aStarInfo.chars = chars;
        aStarInfo.chars.splice(aStarInfo.chars.indexOf(currentFontInfo.id.toString()), 1);
        if (aStarInfo.chars.length == 0) {
            return aStarInfo;
        }
        if (!aStarInfo.isOpen(x - 1, y) && !aStarInfo.isSure(x - 1, y)) {
            aStarInfo.open(x - 1, y);
        }
        if (!aStarInfo.isOpen(x + 1, y) && !aStarInfo.isSure(x + 1, y)) {
            aStarInfo.open(x + 1, y);
        }
        if (!aStarInfo.isOpen(x, y - 1) && !aStarInfo.isSure(x, y - 1)) {
            aStarInfo.open(x, y - 1);
        }
        if (!aStarInfo.isOpen(x, y + 1) && !aStarInfo.isSure(x, y + 1)) {
            aStarInfo.open(x, y + 1);
        }
        var openList = aStarInfo.getOpenList();
        for (var i = 0; i < openList.length; i++) {
            var element = openList[i];
            var cout = this.dispelItemSure(element.x, element.y, aStarInfo);
            if (cout != null) {
                return cout;
            }
        }
        return null;
    };
    MainGameScene.prototype.destroyGuideImgs = function () {
        for (var tempProperty in this._guideImgs) {
            var tempImg = this._guideImgs[tempProperty];
            Laya.timer.clearAll(tempImg);
            Laya.Tween.clearAll(tempImg);
            tempImg.destroy(true);
        }
        this._guideImgs = {};
    };
    MainGameScene.prototype.setNextGuideRate = function () {
        if (!AppConfig_1.default.hadGuidance()) {
            if (this._score < 300) {
                this._guideRate = 100;
            }
            else if (this._score < 600) {
                this._guideRate = 70;
            }
            else if (this._score < 1500) {
                this._guideRate = 60;
            }
            else if (this._score < 3000) {
                this._guideRate = 40;
            }
            else if (this._score < 6000) {
                this._guideRate = 20;
            }
            else if (this._score < 12000) {
                this._guideRate = 10;
            }
            else {
                this._guideRate = Math.min(this._guideRate + 1, 7);
            }
            return;
        }
        this._guideRate = Math.min(this._guideRate + 1, 7);
    };
    /**
       * 循环所有顶格，显示跟当前飘落的汉子有关联的格子，即可组成词语或者和合成汉子的格子
       */
    MainGameScene.prototype.guideToGrid = function () {
        var _this = this;
        for (var tempProperty in this._guideImgs) {
            var tempImg = this._guideImgs[tempProperty];
            Laya.timer.clearAll(tempImg);
            Laya.Tween.clearAll(tempImg);
            tempImg.destroy(true);
        }
        if (this._dropingFontInfo.text == "*")
            return;
        this._guideImgs = {};
        var rate = Math.random() * 100;
        if (this._myPlayerInfo.guideRemainTimes > 0) {
            rate = 0;
            this._myPlayerInfo.guideRemainTimes--;
        }
        if (rate > this._guideRate) {
            this.setNextGuideRate();
            return;
        }
        var dropingFontCanHeChengFontInfos = this._dropingFontInfo.canHeChengFontInfos;
        var dropingFontCanHeChengGroups = this._dropingFontInfo.canHeChengGroups;
        var topFontInfos = this.getTopFontInfos();
        var points = [];
        topFontInfos.forEach(function (tempFontInfo) {
            if (tempFontInfo.id == null) {
                return;
            }
            dropingFontCanHeChengGroups.forEach(function (tempGroup) {
                if (tempGroup.length != 2) {
                    return;
                }
                var groupArr = tempGroup.split("");
                groupArr.splice(groupArr.indexOf(_this._dropingFontInfo.text), 1);
                if (groupArr.indexOf(tempFontInfo.text) != -1) {
                    //可合成词组
                    points.push(new Laya.Point(tempFontInfo.x, tempFontInfo.y));
                    return;
                }
            });
            dropingFontCanHeChengFontInfos.forEach(function (tempMergeFontInfo) {
                var structInfos = tempMergeFontInfo.getStructInfos(tempFontInfo.id);
                for (var i = 0; i < structInfos.length; i++) {
                    var tempStruckInfo = structInfos[i];
                    var tempStruckArr = tempStruckInfo.split("_");
                    if (tempStruckArr.length != 2) {
                        continue;
                    }
                    tempStruckArr.splice(tempStruckArr.indexOf(tempFontInfo.id.toString()), 1);
                    if (tempStruckArr.indexOf(_this._dropingFontInfo.id.toString()) != -1) {
                        //可合成汉子
                        points.push(new Laya.Point(tempFontInfo.x, tempFontInfo.y));
                        return;
                    }
                }
            });
        });
        if (points.length > 0) {
            this._guideRate = 1;
            this.setNextGuideRate();
            points.forEach(function (element) {
                if (_this._guideImgs[element.x + "-" + element.y] != null) {
                    return;
                }
                var tempGrid = _this.getFontCell(element.x, element.y);
                var tempImg = new Laya.Image("map/tz_jiantou.png");
                tempImg.scaleX = tempImg.scaleY = 0.7;
                tempImg.rotation = 90;
                tempImg.x = 75;
                tempImg.y = -75;
                tempGrid.addChild(tempImg);
                _this._guideImgs[element.x + "-" + element.y] = tempImg;
                Laya.timer.loop(1000, tempImg, function (par_img) {
                    var targetY = par_img.y == -75 ? -85 : -75;
                    Laya.Tween.to(par_img, { y: targetY }, 750);
                }, [tempImg]);
            });
        }
    };
    MainGameScene.prototype.getFontInfo = function (x, y) {
        if (this._fonts[x] == null) {
            return null;
        }
        return this._fonts[x][y];
    };
    MainGameScene.prototype.getFontCell = function (x, y) {
        if (y < 0 || y >= this.list_grids.repeatY || x < 0 || x >= this.list_grids.repeatX) {
            return null;
        }
        return this.list_grids.getCell(y * this.list_grids.repeatX + x);
    };
    MainGameScene.prototype.getFontScript = function (x, y) {
        var fontCell = this.getFontCell(x, y);
        if (fontCell == null)
            return null;
        return fontCell.getComponent(FontGrid_1.default);
    };
    //信息更新
    MainGameScene.prototype.refresh = function () {
        this.setStar(this._myPlayerInfo.getStarInfo(this._score).star_num);
        this.updateNextDropingFont();
        this.updateScore();
        this.updatePopularGroup();
        if (this._myPlayerInfo.wannengUseTimes > 0) {
            this.btn_wanneng.mouseEnabled = true;
            this.btn_wanneng.gray = false;
        }
        else {
            this.btn_wanneng.mouseEnabled = false;
            this.btn_wanneng.gray = true;
        }
        if (this._myPlayerInfo.guideUseTimes > 0) {
            this.btn_point.mouseEnabled = true;
            this.btn_point.gray = false;
        }
        else {
            this.btn_point.mouseEnabled = false;
            this.btn_point.gray = true;
        }
    };
    MainGameScene.prototype.updateScore = function () {
        this.txt_score.text = this._score.toString();
    };
    MainGameScene.prototype.updatePopularGroup = function () {
        if (this._popularGroup == null) {
            var bank = MapFontInfo_1.default.DataSource["bank"];
            this._popularGroup = bank[Math.floor(Math.random() * bank.length)];
            this.heCiSplitTimes = 0;
        }
        if (this._popularGroup != null) {
            this.txt_popularGroup.text = this._popularGroup;
            this.img_popularGroupBg.height = this.txt_popularGroup.displayHeight + 16;
        }
    };
    MainGameScene.prototype.updateNextDropingFont = function () {
        if (this._nextDropingFontInfo == null) {
            this.txt_nextFont.text = "";
        }
        else {
            this.txt_nextFont.text = this._nextDropingFontInfo.text;
        }
    };
    MainGameScene.prototype.setDispelText = function (text) {
        Laya.Tween.clearAll(this.mc_dispelText);
        this.mc_dispelText.scaleX = this.mc_dispelText.scaleY = 0.4;
        this.txt_dispelText.text = text;
        switch (text.length) {
            case 1:
                this.txt_dispelText.fontSize = 120;
                this.txt_dispelText.size(120, 120);
                break;
            case 2:
                this.txt_dispelText.fontSize = 60;
                this.txt_dispelText.size(120, 60);
                break;
            case 3:
                this.txt_dispelText.fontSize = 40;
                this.txt_dispelText.size(120, 40);
                break;
            case 4:
                this.txt_dispelText.fontSize = 30;
                this.txt_dispelText.size(120, 30);
                break;
        }
        Laya.Tween.to(this.mc_dispelText, { scaleX: 1, scaleY: 1 }, 300);
    };
    MainGameScene.prototype.setStar = function (star) {
        var list = [];
        while (star > 0 || list.length < 5) {
            if (star > 0)
                list.push(true);
            else
                list.push(false);
            star--;
        }
    };
    //新手前10000分降低难度
    MainGameScene.prototype.reduceNanDu = function (kunNan) {
        if (!AppConfig_1.default.hadGuidance()) {
            if (this._score < 500) {
                kunNan = Math.floor(kunNan * 300 / 100);
            }
            else if (this._score < 1000) {
                kunNan = Math.floor(kunNan * 200 / 100);
            }
            else if (this._score < 2000) {
                kunNan = Math.floor(kunNan * 160 / 100);
            }
            else if (this._score < 3000) {
                kunNan = Math.floor(kunNan * 150 / 100);
            }
            else if (this._score < 5000) {
                kunNan = Math.floor(kunNan * 120 / 100);
            }
            else if (this._score < 10000) {
                kunNan = Math.floor(kunNan * 110 / 100);
            }
        }
        return kunNan;
    };
    MainGameScene.prototype.randomNextFont = function () {
        if (this._debugMode) {
            var txt = this._debugDropFonts.shift();
            this._nextDropingFontInfo = MapFontInfo_1.default.create({ text: txt });
            if (this._nextDropingFontInfo.text != null) {
                return;
            }
        }
        if (Math.random() * 100 > this.buShouRate) {
            this.buShouRate = Math.min(this.buShouRate + 1, 5);
        }
        else {
            if (AppConfig_1.default.hadGuidance() || this._score > 5000) {
                this.buShouRate = 0;
                var txt = this.getRandomElement(MapFontInfo_1.default.DataSource["stunt_font"]);
                this._nextDropingFontInfo = MapFontInfo_1.default.create({ text: txt });
                if (this._nextDropingFontInfo.text != null) {
                    this._nextDropingFontInfo.isStuntFont = true;
                    return;
                }
            }
        }
        if (this._guideDropFonts.length > 0) {
            var txt = this._guideDropFonts.shift();
            this._nextDropingFontInfo = MapFontInfo_1.default.create({ text: txt });
            if (this._nextDropingFontInfo.text != null) {
                return;
            }
        }
        if (this._splitFontWords.length > 0) {
            this._nextDropingFontInfo = this.getRandomElement(this._splitFontWords);
            this._splitFontWords.splice(this._splitFontWords.indexOf(this._nextDropingFontInfo), 1);
            if (this._nextDropingFontInfo != null) {
                return;
            }
        }
        if (this._splitGroupWords.length > 0) {
            this._nextDropingFontInfo = this.getRandomElement(this._splitGroupWords);
            this._splitGroupWords.splice(this._splitGroupWords.indexOf(this._nextDropingFontInfo), 1);
            if (this._nextDropingFontInfo != null) {
                return;
            }
        }
        //根据当前格子数以及当前星级 获得一个困难系数 比如是50
        var kunNan = this.getNanDuXiShu() * this._myPlayerInfo.getStarInfo(this._score).split_rate;
        var result = Math.min(100, Math.floor(this.heCizuRate * kunNan / 10000));
        if (this.getRandomResult(result)) { //随机到出左边词组相关联汉字
            this.hanZiRate += 10; // 接下来出现无关联汉字概率加10
            this.ciZuRate += 10; // 接下来出现无关联汉字并与5列能合成词的概率加10
            this.heCizuRate = 10;
            if (this._words.length == 0) {
                this.heCiSplitTimes++;
                this._words = this.splitGroupToFontInfos(this._popularGroup, null, this.heCiSplitTimes > 2 ? "special" : "commen");
            }
            this._nextDropingFontInfo = this.getRandomElement(this._words);
            this._words.splice(this._words.indexOf(this._nextDropingFontInfo), 1);
            if (this._nextDropingFontInfo != null) {
                return;
            }
        }
        this.heCizuRate += 15;
        var topFontInfos = this.getTopFontInfos();
        if (topFontInfos.length > 0) {
            var topFontInfo = this.getRandomElement(topFontInfos);
            if (topFontInfo.canHeChengFont && this.getRandomResult(this.reduceNanDu(this.hanZiRate * kunNan / 10000))) {
                //随机到要进行可汉字拆分
                this.hanZiRate = 30;
                this.ciZuRate += 10;
                var fontInfos = topFontInfo.canHeChengFontInfos;
                var splitFontInfo = this.getRandomElement(fontInfos);
                this._splitFontWords = this.splitFontToFontInfos(splitFontInfo, topFontInfo.id);
                this._nextDropingFontInfo = this.getRandomElement(this._splitFontWords);
                this._splitFontWords.splice(this._splitFontWords.indexOf(this._nextDropingFontInfo), 1);
                if (this._nextDropingFontInfo != null) {
                    return;
                }
            }
            if (topFontInfo.canHeChengGroup && this.getRandomResult(this.reduceNanDu(this.ciZuRate * kunNan / 10000))) {
                //随机到要进行拆分词组
                this.hanZiRate += 15;
                this.ciZuRate = 15;
                var groups = topFontInfo.canHeChengGroups;
                var splitGroup = this.getRandomElement(groups);
                this._splitGroupWords = this.splitGroupToFontInfos(splitGroup, topFontInfo.text, "sp");
                this._nextDropingFontInfo = this.getRandomElement(this._splitGroupWords);
                this._splitGroupWords.splice(this._splitGroupWords.indexOf(this._nextDropingFontInfo), 1);
                if (this._nextDropingFontInfo != null) {
                    return;
                }
            }
        }
        this.ciZuRate += 10;
        this.hanZiRate += 15;
        //随机从汉字库抽一个汉字
        var fontDataArr = this.getRandHzBySocore(MapFontInfo_1.default.DataSource["font"]);
        var mapFontInfo = MapFontInfo_1.default.create();
        mapFontInfo.setDataByValueArr(fontDataArr);
        this._nextDropingFontInfo = mapFontInfo;
    };
    MainGameScene.prototype.getRandHzBySocore = function (arr) {
        if (arr.length == 0)
            return null;
        var randNum = 50;
        if (this._score > 3000 && this._score <= 20000) {
            randNum += (this._score - 2000) / 20;
        }
        else if (this._score > 20000) {
            randNum += (this._score - 2000) / 10;
        }
        randNum = Math.floor(Math.random() * randNum) + 200;
        if (randNum > arr.length) {
            randNum = arr.length - 1;
        }
        console.log("随机出一个汉字。。。。", randNum, arr.length);
        return arr[randNum];
    };
    MainGameScene.prototype.getTopFontInfos = function () {
        var cout = [];
        var font = null;
        for (var i = 0; i < this.list_grids.repeatX; i++) {
            font = null;
            for (var j = 0; j < this.list_grids.repeatY; j++) {
                if (this._fonts[i][j] != null) {
                    font = this._fonts[i][j];
                    break;
                }
            }
            if (font != null) {
                cout.push(font);
            }
        }
        return cout;
    };
    /**
     *
     * @param str 需要拆分的字符串
     * @param splitType 拆分方式 commen随机拆分 spcial不拆分
     */
    MainGameScene.prototype.splitGroupToFontInfos = function (str, removeFontText, splitType) {
        var _this = this;
        if (removeFontText === void 0) { removeFontText = null; }
        if (splitType === void 0) { splitType = "commen"; }
        var cout = [];
        str.split('').forEach(function (element) {
            if (element == removeFontText) {
                return;
            }
            var fontInfo = MapFontInfo_1.default.create({ text: element });
            if (fontInfo.id == null) {
                console.log("lack font:" + element);
                return;
            }
            if (splitType == "commen") {
                cout = cout.concat(_this.splitFontToFontInfos(fontInfo, null, splitType));
            }
            else {
                cout.push(fontInfo);
            }
        });
        return cout;
    };
    MainGameScene.prototype.splitFontToFontInfos = function (fontTxt, removeFontId, splitType) {
        if (removeFontId === void 0) { removeFontId = null; }
        if (splitType === void 0) { splitType = "commen"; }
        var fontInfo;
        if (fontTxt instanceof MapFontInfo_1.default) {
            fontInfo = fontTxt;
        }
        else {
            fontInfo = MapFontInfo_1.default.create({ text: fontTxt });
        }
        if (splitType != "commen") {
            return [fontInfo];
        }
        var cout = [];
        var structInfos = fontInfo.structInfo.split(",");
        var structInfo = structInfos[Math.floor(Math.random() * structInfos.length)];
        if (structInfo == fontInfo.id.toString()) {
            cout.push(fontInfo);
        }
        else {
            structInfo.split("_").forEach(function (element2) {
                if (element2 == "" || (removeFontId != null && element2 == removeFontId.toString())) {
                    return;
                }
                var splitFontInfo = MapFontInfo_1.default.create({ id: element2 });
                if (splitFontInfo.id == null) {
                    console.log("lack font id:" + element2);
                    return;
                }
                cout.push(splitFontInfo);
            });
        }
        return cout;
    };
    MainGameScene.prototype.getRandomResult = function (val) {
        if (Math.floor(Math.random() * 100) < val) {
            return true;
        }
        return false;
    };
    /**
     * 获取难度系数
     */
    MainGameScene.prototype.getNanDuXiShu = function () {
        var fontGridNum = 0;
        for (var i = 0; i < this.list_grids.repeatX; i++) {
            for (var j = 0; j < this.list_grids.repeatY; j++) {
                if (this._fonts[i][j] != null) {
                    fontGridNum += this.list_grids.repeatY - j;
                    break;
                }
            }
        }
        return MapFontInfo_1.default.DataSource["degree_difficulty"][fontGridNum];
    };
    MainGameScene.prototype.getRandomElement = function (arr) {
        if (arr.length == 0)
            return null;
        return arr[Math.floor(Math.random() * arr.length)];
    };
    MainGameScene.prototype.playEffectInc = function () {
        this._playerEffectInd++;
        this.changeGameStatue(GameState.EffectPause);
    };
    MainGameScene.prototype.endEffectInc = function () {
        this._playerEffectInd--;
        if (this._playerEffectInd < 0) {
            this._playerEffectInd = 0;
        }
        if (this._playerEffectInd == 0 && this._gameState == GameState.EffectPause) {
            this.changeGameStatue(GameState.Playing);
            this.checkSysDropFonts();
            this._sysDispelFontInfoStack = [];
            if (this._sysDropingFontInfos.length == 0) {
                this.invokeStuntFont();
            }
        }
    };
    return MainGameScene;
}(SceneBase_1.default));
exports.default = MainGameScene;
var SearchInfo = /** @class */ (function () {
    function SearchInfo() {
        this.currentPoint = new Laya.Point();
        this._openList = [];
        this._openObj = {};
        this._sureList = [];
        this._sureObj = {};
    }
    SearchInfo.prototype.setOpenList = function (points) {
        var _this = this;
        points.forEach(function (element) {
            _this.open(element.x, element.y);
        });
    };
    SearchInfo.prototype.getOpenList = function () {
        return this._openList;
    };
    SearchInfo.prototype.setSureList = function (points) {
        var _this = this;
        points.forEach(function (element) {
            _this.sure(element.x, element.y);
        });
    };
    SearchInfo.prototype.getSureList = function () {
        return this._sureList;
    };
    SearchInfo.prototype.open = function (x, y, isOpen) {
        if (isOpen === void 0) { isOpen = true; }
        var key = x.toString() + "_" + y.toString();
        if (isOpen) {
            var point = new Laya.Point(x, y);
            this._openList.push(point);
            this._openObj[key] = point;
        }
        else {
            if (this._openObj[key] != null) {
                this._openList.splice(this._openList.indexOf(this._openObj[key]), 1);
                delete this._openObj[key];
            }
        }
    };
    SearchInfo.prototype.isOpen = function (x, y) {
        var key = x.toString() + "_" + y.toString();
        return this._openObj[key] != null;
    };
    SearchInfo.prototype.sure = function (x, y) {
        var key = x.toString() + "_" + y.toString();
        var point = new Laya.Point(x, y);
        this._sureList.push(point);
        this._sureObj[key] = point;
    };
    SearchInfo.prototype.isSure = function (x, y) {
        var key = x.toString() + "_" + y.toString();
        return this._sureObj[key] != null;
    };
    return SearchInfo;
}());

},{"../../AppConfig":1,"../controller/ControllerMgr":12,"../controller/PlayerController":13,"../controller/TipController":14,"../model/MapFontInfo":15,"../prefeb/FontGrid":19,"../prefeb/GameResult":20,"../prefeb/GameSetting":21,"../prefeb/StartGame":23,"../tool/NativeBridgeAndroid":29,"../tool/SoundTool":30,"./SceneBase":27}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("../../GameConfig");
var WXTool_1 = require("../tool/WXTool");
var SceneMgr_1 = require("./SceneMgr");
var AppConfig_1 = require("../../AppConfig");
var SceneBase = /** @class */ (function (_super) {
    __extends(SceneBase, _super);
    function SceneBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SceneBase.prototype.onAwake = function () {
        SceneMgr_1.default.curSceneScript = this;
        this.createWxOpenDataViewer();
        var arr = Object.getOwnPropertyNames(this.owner);
        var self = this;
        arr.forEach(function (element) {
            if (element.indexOf("_") == -1) {
                return;
            }
            var tempPropertyStr = element.toString();
            var tempPropertyList = tempPropertyStr.split("_");
            switch (tempPropertyList[0]) {
                case "list":
                case "txt":
                case "img":
                case "btn":
                case "mc":
                    self[tempPropertyStr] = self.owner[tempPropertyStr];
                    break;
                default:
                    break;
            }
        });
    };
    SceneBase.prototype.addPopUp = function (sign, content, isCenter, isShowAlphaSpr, isEnableAlphaClose) {
        if (isCenter === void 0) { isCenter = true; }
        if (isShowAlphaSpr === void 0) { isShowAlphaSpr = true; }
        if (isEnableAlphaClose === void 0) { isEnableAlphaClose = false; }
        this._popUpSign = sign;
        this._popUpContent = content;
        if (this._popUpSpr == null) {
            this._popUpSpr = new Laya.Sprite();
            Laya.stage.addChild(this._popUpSpr);
        }
        else {
            this._popUpSpr.visible = true;
        }
        var h = AppConfig_1.default.getMobileHeight();
        if (isCenter) {
            if (content instanceof Laya.Sprite) {
                content.x = (GameConfig_1.default.width - content.width) / 2;
                content.y = (h - content.height) / 2;
            }
            else {
                content.centerX = 0;
                content.centerY = 0;
            }
        }
        if (isShowAlphaSpr) {
            if (this._alphaSpr == null) {
                this._alphaSpr = new Laya.Sprite();
                this._alphaSpr.width = GameConfig_1.default.width;
                this._alphaSpr.height = GameConfig_1.default.height;
                this._alphaSpr.graphics.drawRect(0, 0, GameConfig_1.default.width, h, "#000000");
                this._alphaSpr.alpha = 0.4;
                this._popUpSpr.addChild(this._alphaSpr);
            }
            if (isEnableAlphaClose) {
                this._alphaSpr.on(Laya.Event.CLICK, this, this.hidePopUp);
            }
        }
        else if (this._alphaSpr) {
            this._alphaSpr.visible = false;
        }
        this._popUpSpr.addChild(this._popUpContent);
    };
    SceneBase.prototype.hidePopUp = function () {
        if (this._popUpSpr) {
            this._popUpSpr.visible = false;
        }
        if (this._popUpContent) {
            if (this._popUpContent == this._dataViewer) {
                this._popUpContent.visible = false;
            }
            else {
                this._popUpContent.destroy();
            }
        }
        this._popUpSign = null;
    };
    SceneBase.prototype.addDialog = function (content, isCenter, isShowAlphaSpr, isEnableAlphaClose) {
        if (isCenter === void 0) { isCenter = true; }
        if (isShowAlphaSpr === void 0) { isShowAlphaSpr = true; }
        if (isEnableAlphaClose === void 0) { isEnableAlphaClose = false; }
        this._dialogContent = content;
        if (this._dialogSpr == null) {
            this._dialogSpr = new Laya.Sprite();
            Laya.stage.addChild(this._dialogSpr);
        }
        else {
            this._dialogSpr.visible = true;
        }
        var h = AppConfig_1.default.getMobileHeight();
        if (isCenter) {
            content.x = (GameConfig_1.default.width - content.width) / 2;
            content.y = (h - content.height) / 2;
        }
        if (isShowAlphaSpr) {
            if (this._alphaDialogSpr == null) {
                this._alphaDialogSpr = new Laya.Sprite();
                this._alphaDialogSpr.width = GameConfig_1.default.width;
                this._alphaDialogSpr.height = h;
                this._alphaDialogSpr.graphics.drawRect(0, 0, GameConfig_1.default.width, h, "#000000");
                this._alphaDialogSpr.alpha = 0.4;
                this._alphaDialogSpr.mouseEnabled = true;
                this._alphaDialogSpr.mouseThrough = false;
                this._dialogSpr.addChild(this._alphaDialogSpr);
            }
            if (isEnableAlphaClose) {
                this._alphaDialogSpr.on(Laya.Event.CLICK, this, this.hideDialog);
            }
        }
        else if (this._alphaDialogSpr) {
            this._alphaDialogSpr.visible = false;
        }
        this._dialogSpr.addChild(this._dialogContent);
    };
    SceneBase.prototype.hideDialog = function () {
        if (this._dialogSpr) {
            this._dialogSpr.visible = false;
        }
        if (this._dialogContent) {
            if (this._dialogContent == this._dataViewer) {
                this._dialogContent.visible = false;
                WXTool_1.default.showAllBtn();
            }
            else {
                this._dialogContent.destroy();
            }
        }
    };
    SceneBase.prototype.createWxOpenDataViewer = function () {
        if (this._dataViewer == null) {
            this._dataViewer = new Laya.WXOpenDataViewer();
            this._dataViewer.width = 610;
            this._dataViewer.height = 757;
            this._dataViewer.visible = false;
        }
    };
    SceneBase.prototype.showRank = function () {
        this._dataViewer.visible = true;
        this._dataViewer.postMsg({ cmd: "refreshRankList" });
        this.addDialog(this._dataViewer, true, true, true);
        WXTool_1.default.hideAllBtn();
    };
    return SceneBase;
}(Laya.Script));
exports.default = SceneBase;

},{"../../AppConfig":1,"../../GameConfig":3,"../tool/WXTool":31,"./SceneMgr":28}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SceneMgr = /** @class */ (function (_super) {
    __extends(SceneMgr, _super);
    function SceneMgr() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SceneMgr;
}(Laya.Script));
exports.default = SceneMgr;

},{}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NativeBridge = /** @class */ (function (_super) {
    __extends(NativeBridge, _super);
    function NativeBridge() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NativeBridge.showVedioAd = function (callBk) {
        var os = Laya.Browser.window.conchConfig.getOS();
        var bridge;
        var obj = {};
        if (os == "Conch-ios") {
            bridge = Laya.Browser.window.PlatformClass.createClass("JSBridge"); //创建脚步代理
        }
        else if (os == "Conch-android") {
            //需要完整的类路径，注意与iOS的不同
            bridge = Laya.Browser.window.PlatformClass.createClass("demo.JSBridge"); //创建脚步代理
        }
        if (os == "Conch-ios") {
            //iOS注意函数签名，注意与Android的不同
            bridge.callWithBack(function (value) {
                callBk();
            }, "showVedioAdCallBk:");
        }
        else if (os == "Conch-android") {
            bridge.callWithBack(function (value) {
                callBk();
            }, "showVedioAdCallBk");
        }
    };
    NativeBridge.showBannerAd = function (bo) {
        var os = Laya.Browser.window.conchConfig.getOS();
        var bridge;
        var obj = {};
        if (os == "Conch-ios") {
            bridge = Laya.Browser.window.PlatformClass.createClass("JSBridge"); //创建脚步代理
        }
        else if (os == "Conch-android") {
            //需要完整的类路径，注意与iOS的不同
            bridge = Laya.Browser.window.PlatformClass.createClass("demo.JSBridge"); //创建脚步代理
        }
        if (os == "Conch-ios") {
            //iOS注意函数签名，注意与Android的不同
            bridge.call("setBannerAdVisible:", bo);
        }
        else if (os == "Conch-android") {
            bridge.call("setBannerAdVisible", bo);
        }
    };
    return NativeBridge;
}(Laya.Script));
exports.default = NativeBridge;

},{}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var URI_1 = require("../../URI");
var SoundTool = /** @class */ (function () {
    function SoundTool() {
    }
    // public static playBgMusic() : void{
    //     if(Laya.loader.getRes(URI.soundUrl + "bg_music.wav") != null)
    //         Laya.SoundManager.playMusic(URI.soundUrl + "bg_music.wav");
    // }
    SoundTool.playXiaoChuEffect = function () {
        if (Laya.loader.getRes(URI_1.default.soundUrl + "xiaochu.wav") != null)
            Laya.SoundManager.playSound(URI_1.default.soundUrl + "xiaochu.wav");
    };
    SoundTool.playHeChengEffect = function () {
        if (Laya.loader.getRes(URI_1.default.soundUrl + "hecheng.wav") != null)
            Laya.SoundManager.playSound(URI_1.default.soundUrl + "hecheng.wav");
    };
    SoundTool.playTeJiEffect = function () {
        if (Laya.loader.getRes(URI_1.default.soundUrl + "teji.wav") != null)
            Laya.SoundManager.playSound(URI_1.default.soundUrl + "teji.wav");
    };
    SoundTool.playXiaHuaEffect = function () {
        if (Laya.loader.getRes(URI_1.default.soundUrl + "xiahua.wav") != null)
            Laya.SoundManager.playSound(URI_1.default.soundUrl + "xiahua.wav");
    };
    SoundTool.playYiDongEffect = function () {
        if (Laya.loader.getRes(URI_1.default.soundUrl + "yidong.wav") != null)
            Laya.SoundManager.playSound(URI_1.default.soundUrl + "yidong.wav");
    };
    SoundTool.getSoundVolume = function () {
        return SoundTool._soundVolume;
    };
    SoundTool.setSoundVolume = function (value) {
        if (value === void 0) { value = 0.2; }
        if (Number["isNaN"](value)) {
            value = 0.2;
        }
        SoundTool._soundVolume = value;
        Laya.SoundManager.setSoundVolume(value);
        Laya.LocalStorage.setItem("soundVolume", (value * 100).toString());
    };
    SoundTool.getMusicVolume = function () {
        return SoundTool._musicVolume;
    };
    SoundTool.setMusicVolume = function (value) {
        if (value === void 0) { value = 0.2; }
        if (Number["isNaN"](value)) {
            value = 0.2;
        }
        SoundTool._musicVolume = value;
        Laya.SoundManager.setMusicVolume(value);
        Laya.LocalStorage.setItem("musicVolume", (value * 100).toString());
    };
    SoundTool.init = function () {
        SoundTool.setSoundVolume(parseInt(Laya.LocalStorage.getItem("soundVolume")) / 100);
        SoundTool.setMusicVolume(parseInt(Laya.LocalStorage.getItem("musicVolume")) / 100);
    };
    return SoundTool;
}());
exports.default = SoundTool;

},{"../../URI":6}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXTool = /** @class */ (function (_super) {
    __extends(WXTool, _super);
    function WXTool() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    WXTool.addBtn = function (btn) {
        this._btns.push(btn);
    };
    WXTool.removeBtn = function (btn) {
        this._btns.slice(this._btns.indexOf(btn), 1);
    };
    WXTool.hideAllBtn = function () {
        this._btns.forEach(function (element) {
            element.style.hidden = true;
        });
    };
    WXTool.showAllBtn = function () {
        this._btns.forEach(function (element) {
            element.style.hidden = false;
        });
    };
    WXTool._btns = [];
    return WXTool;
}(Laya.Script));
exports.default = WXTool;

},{}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var test;
    (function (test) {
        var TestSceneUI = /** @class */ (function (_super) {
            __extends(TestSceneUI, _super);
            function TestSceneUI() {
                return _super.call(this) || this;
            }
            TestSceneUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.loadScene("test/TestScene");
            };
            return TestSceneUI;
        }(Scene));
        test.TestSceneUI = TestSceneUI;
        REG("ui.test.TestSceneUI", TestSceneUI);
    })(test = ui.test || (ui.test = {}));
})(ui = exports.ui || (exports.ui = {}));

},{}]},{},[4])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
